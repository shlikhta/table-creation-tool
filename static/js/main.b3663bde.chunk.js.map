{"version":3,"sources":["components/TableSeatsTool/index.js","components/Shape/SquareTableSvg.js","components/Shape/RectangularTableSvg.js","components/Shape/RoundTableSvg.js","components/Shape/index.js","index.js"],"names":["TableSeatsTool","_ref","title","count","setSeats","desc","props","Object","objectWithoutProperties","react_default","a","createElement","assign","className","onClick","esm","width","strokeWidth","defaultOptions","SquareTableSvg","_ref$numSeats","numSeats","_useState","useState","seats","svgSize","tableSize","spaceBetweenSeats","_useState2","slicedToArray","svgProps","setSvgProps","useEffect","maxSeatsEachBorder","Math","ceil","borderCount","seatWidth","seatHeight","tableOffset","seatOffset","angleSpace","tableWidth","tableProp","_ref4","centerCoordinate","i","length","groupIndex","seatsLength","seatsTotalHalfWidth","startPoint","direction","j","step","seatStartX","seatStartY","anglePositionY","anglePositionX","push","getSeats","_ref3","rectGroupIndex","id","concat","fillSeats","_ref2","rotate","getAnglePositions","console","table","prevState","objectSpread","xmlns","xmlnsXlink","height","viewBox","x","y","filterUnits","in","operator","radius","result","stdDeviation","values","fill","transform","stroke","map","border","index","seat","key","data-key","rx","filter","RectangularTableSvg","seatRound","seatOpacity","useMemo","tableHeight","newTableWidth","svgWidth","svgHeight","centerX","centerY","offsetDirection","opacity","RoundTableSvg","tableRotate","calcHalf","val","tableRadius","PI","seatOffsetY","seatsCount","seatCenterX","cos","seatCenterY","sin","cx","cy","r","tableColors","free","shapeColor","textColor","partiallySeated","seated","entry","mainCurse","dessert","cleared","checkDropped","paid","bussingNeeded","Finished","Shape","type","name","number","_ref$orientationAngle","positionX","positionY","orientationAngle","_ref$scale","scale","icon","progress","_ref$status","status","style","color","RenderSvg","SquareTableSvg_SquareTableSvg","RectangularTableSvg_RectangularTableSvg","RoundTableSvg_RoundTableSvg","App","circleSeats","setCircleSeats","_useState3","_useState4","squareSeats","setSquareSeats","_useState5","_useState6","rectangleSeats","setRectangleSeats","TableSeatsTool_TableSeatsTool","Shape_Shape","outline_esm","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b3663bde.chunk.js","sourcesContent":["import React from 'react';\nimport { PlusCircleIcon, PlusIcon } from 'nexticons/solid';\n\nexport const TableSeatsTool = ({ title, count, setSeats, desc, ...props }) => {\n  return (\n    <div className=\"table-seats-tool\" {...props}>\n      {title && <h2 className=\"table-seats-tool__title\">{title}</h2>}\n      <div className=\"table-seats-tool__counter\">\n        <button\n          className=\"table-seats-tool__button\"\n          onClick={() => setSeats(count > 0 ? count - 1 : 0)}\n        >\n          -\n        </button>\n        <div className=\"table-seats-tool__count\">{count}</div>\n        <button\n          className=\"table-seats-tool__button\"\n          onClick={() => setSeats(count < 30 ? count + 1 : 30)}\n        >\n          <PlusIcon width={18} strokeWidth={2} />\n        </button>\n      </div>\n      {desc && (\n        <div className=\"table-seats-tool__info\">\n          <PlusCircleIcon className=\"table-seats-tool__info-icon\" />\n          <p>{desc}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nconst defaultOptions = {\n  seatWidth: 26,\n  seatHeight: 18,\n  tableOffset: 9,\n  tableRotate: 180,\n  seatOffset: 2,\n  seatRound: 7,\n  angleSpace: 14,\n  borderCount: 4,\n  seatColor: '#A0A0A0',\n  minSpaceBetweenSeats: 4,\n  maxSpaceBetweenSeats: 18,\n};\n\nexport const SquareTableSvg = ({ numSeats = 0, ...props }) => {\n  const [svgProps, setSvgProps] = useState({\n    seats: [],\n    svgSize: 72,\n    tableSize: 54,\n    spaceBetweenSeats: 8, //18\n  });\n\n  const calcHalf = (val) => {\n    return val / 2;\n  };\n\n  const getAnglePositions = ({ tableSize, tableOffset }) => {\n    let tableProp = [];\n    const { borderCount } = defaultOptions;\n\n    for (let i = 0; i < borderCount; i++) {\n      let rotate = (360 / borderCount) * i;\n\n      let anglePositionX =\n        i % 4 === 0 || i % 4 === 3\n          ? tableOffset + tableSize\n          : i % 4 === 1 || i % 4 === 2\n          ? tableOffset\n          : 0;\n      let anglePositionY =\n        i % 4 === 0 || i % 4 === 1\n          ? tableOffset + tableSize\n          : i % 4 === 2 || i % 4 === 3\n          ? tableOffset\n          : 0;\n\n      tableProp.push({\n        count: 0,\n        rotate,\n        anglePositionX,\n        anglePositionY,\n        seats: [],\n      });\n    }\n\n    return tableProp;\n  };\n\n  const fillSeats = ({ tableProp, numSeats }) => {\n    for (let i = 0; i < numSeats; i++) {\n      let groupIndex = i % 4;\n\n      if (numSeats === 2 && i === 1) {\n        let rectGroupIndex = groupIndex % 2 === 0 ? 0 : 2;\n\n        tableProp[rectGroupIndex].count += 1;\n        tableProp[rectGroupIndex].seats.push({\n          id: `seat_${i}`,\n          // anglePositionX: tableProp[rectGroupIndex].anglePositionX,\n          // anglePositionY: tableProp[rectGroupIndex].anglePositionY,\n        });\n      } else if (i < 4) {\n        tableProp[groupIndex].count += 1;\n        tableProp[groupIndex].seats.push({\n          id: `seat_${i}`,\n          // anglePositionX: tableProp[groupIndex].anglePositionX,\n          // anglePositionY: tableProp[groupIndex].anglePositionY,\n        });\n      } else {\n        let rectGroupIndex = groupIndex === 3 ? 0 : groupIndex + 1;\n\n        tableProp[rectGroupIndex].count += 1;\n        tableProp[rectGroupIndex].seats.push({\n          id: `seat_${i}`,\n          // anglePositionX: tableProp[rectGroupIndex].anglePositionX,\n          // anglePositionY: tableProp[rectGroupIndex].anglePositionY,\n        });\n      }\n    }\n\n    return tableProp;\n  };\n\n  const getSeats = ({\n    tableProp,\n    seatWidth,\n    spaceBetweenSeats,\n    seatOffset,\n    seatHeight,\n    svgSize,\n  }) => {\n    let seats = [];\n    const centerCoordinate = calcHalf(svgSize);\n\n    for (let i = 0; i < tableProp.length; i++) {\n      let groupIndex = i % 4;\n\n      let seatsLength = tableProp[i].seats.length;\n\n      if (seatsLength > 0) {\n        let seatsTotalHalfWidth =\n          (seatWidth * seatsLength +\n            spaceBetweenSeats * (seatsLength - 1 > 0 ? seatsLength - 1 : 0)) /\n          2;\n        let startPoint = 0;\n        let direction = 1;\n\n        if (groupIndex === 0) {\n          startPoint = centerCoordinate + seatsTotalHalfWidth - seatWidth;\n          direction = -1;\n        } else if (groupIndex === 1) {\n          startPoint = centerCoordinate - seatsTotalHalfWidth;\n          direction = 1;\n        } else if (groupIndex === 2) {\n          startPoint = centerCoordinate - seatsTotalHalfWidth;\n          direction = 1;\n        } else if (groupIndex === 3) {\n          startPoint = centerCoordinate + seatsTotalHalfWidth - seatWidth;\n          direction = -1;\n        }\n\n        for (let j = 0; j < seatsLength; j++) {\n          let step =\n            startPoint + direction * (spaceBetweenSeats * j + seatWidth * j);\n\n          if (groupIndex === 1 || groupIndex === 3) {\n            tableProp[i].seats[j].seatStartX = step;\n            tableProp[i].seats[j].seatStartY =\n              tableProp[i].anglePositionY -\n              seatHeight / 2 +\n              (groupIndex === 3 ? seatOffset : -seatOffset);\n          } else {\n            tableProp[i].seats[j].seatStartY = step;\n            tableProp[i].seats[j].seatStartX =\n              tableProp[i].anglePositionX -\n              seatHeight / 2 +\n              (groupIndex === 2 ? seatOffset : -seatOffset);\n          }\n        }\n      }\n\n      seats.push(tableProp[i].seats);\n    }\n\n    return seats;\n  };\n\n  useEffect(() => {\n    const maxSeatsEachBorder = Math.ceil(numSeats / 4);\n    const {\n      borderCount,\n      seatWidth,\n      seatHeight,\n      tableOffset,\n      seatOffset,\n      angleSpace,\n    } = defaultOptions;\n\n    let spaceBetweenSeats =\n      numSeats <= 12\n        ? svgProps.spaceBetweenSeats\n        : numSeats > 12 && numSeats <= 20\n        ? 6\n        : 4;\n\n    const tablePerimeter =\n      borderCount * seatWidth * maxSeatsEachBorder +\n      borderCount * (maxSeatsEachBorder - 1) * spaceBetweenSeats +\n      angleSpace * borderCount * 2;\n    const tableWidth = tablePerimeter / borderCount;\n    const tableSize = tableWidth > seatWidth ? tableWidth : svgProps.tableSize;\n    const svgSize = tableSize + tableOffset * 2;\n\n    // if (numSeats > 0) {\n    let tableProp = [];\n    tableProp = getAnglePositions({ tableSize, tableOffset });\n    tableProp = fillSeats({ tableProp, numSeats });\n    let seats = getSeats({\n      tableProp,\n      seatWidth,\n      spaceBetweenSeats,\n      seatOffset,\n      seatHeight,\n      svgSize,\n    });\n    console.table(tableProp);\n\n    // }\n\n    setSvgProps((prevState) => ({\n      ...prevState,\n      seats,\n      svgSize,\n      tableSize,\n      spaceBetweenSeats,\n    }));\n  }, [numSeats]);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width={svgProps.svgSize}\n      height={svgProps.svgSize}\n      viewBox={`0 0 ${svgProps.svgSize} ${svgProps.svgSize}`}\n      {...props}\n    >\n      <defs>\n        <filter\n          id=\"square-shadow\"\n          width=\"118.6%\"\n          height=\"118.6%\"\n          x=\"-9.3%\"\n          y=\"-9.3%\"\n          filterUnits=\"objectBoundingBox\"\n        >\n          <feMorphology\n            in=\"SourceAlpha\"\n            operator=\"dilate\"\n            radius=\".5\"\n            result=\"shadowSpreadOuter1\"\n          />\n          <feOffset in=\"shadowSpreadOuter1\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur\n            in=\"shadowOffsetOuter1\"\n            result=\"shadowBlurOuter1\"\n            stdDeviation=\"2.5\"\n          />\n          <feColorMatrix\n            in=\"shadowBlurOuter1\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n          />\n        </filter>\n      </defs>\n\n      <g\n        fill={defaultOptions.seatColor}\n        transform={`rotate(${defaultOptions.tableRotate} ${\n          svgProps.svgSize / 2\n        } ${svgProps.svgSize / 2})`}\n        stroke=\"none\"\n      >\n        {svgProps.seats &&\n          svgProps.seats.length > 0 &&\n          svgProps.seats.map((border, index) => {\n            return (\n              border &&\n              border.map((seat) => {\n                return (\n                  <rect\n                    key={seat.id}\n                    data-key={seat.id}\n                    width={\n                      index % 2 === 1\n                        ? defaultOptions.seatWidth\n                        : defaultOptions.seatHeight\n                    }\n                    height={\n                      index % 2 === 1\n                        ? defaultOptions.seatHeight\n                        : defaultOptions.seatWidth\n                    }\n                    x={seat.seatStartX}\n                    y={seat.seatStartY}\n                    rx={defaultOptions.seatRound}\n                  />\n                );\n              })\n            );\n          })}\n      </g>\n      <rect\n        width={svgProps.tableSize}\n        height={svgProps.tableSize}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        stroke=\"none\"\n        fill=\"#000\"\n        filter=\"url(#square-shadow)\"\n      />\n      <rect\n        width={svgProps.tableSize}\n        height={svgProps.tableSize}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        fill=\"currentColor\"\n        stroke=\"none\"\n      />\n    </svg>\n  );\n};\n","import React, { useMemo, useState } from 'react';\n\nexport const RectangularTableSvg = ({ numSeats = 0, ...props }) => {\n  const [svgProps, setSvgProps] = useState({\n    seats: [],\n    svgSize: {\n      width: 72,\n      height: 72,\n    },\n    tableSize: {\n      width: 54,\n      height: 54,\n    },\n    tableOffset: 9,\n    seatWidth: 26,\n    seatHeight: 18,\n    seatOffset: 2,\n    seatRound: 7,\n    seatOpacity: 0.76,\n    spaceBetweenSeats: 18, //18\n    angleSpace: 14,\n  });\n\n  useMemo(() => {\n    const borderCount = 4;\n    let seats = [];\n    let tableProp = [];\n    let spaceBetweenSeats =\n      numSeats <= 8\n        ? svgProps.spaceBetweenSeats\n        : numSeats > 8 && numSeats <= 12\n        ? 14\n        : numSeats > 12 && numSeats <= 16\n        ? 10\n        : numSeats > 16 && numSeats <= 20\n        ? 8\n        : 4;\n    let seatWidth = svgProps.seatWidth;\n    let seatHeight = svgProps.seatHeight;\n    let tableOffset = svgProps.tableOffset;\n    let seatOffset = svgProps.seatOffset;\n    let angleSpace = svgProps.angleSpace;\n    let maxSeatsEachBorder = Math.ceil((numSeats - 2) / 2);\n    let tableHeight = svgProps.tableSize.height;\n    let tablePerimeter =\n      2 * tableHeight +\n      2 *\n        (seatWidth * maxSeatsEachBorder +\n          spaceBetweenSeats * (maxSeatsEachBorder - 1) +\n          angleSpace * 2);\n    let newTableWidth = (tablePerimeter - 2 * tableHeight) / 2;\n    let tableWidth =\n      seatWidth > newTableWidth ? svgProps.tableSize.width : newTableWidth;\n    let svgWidth = tableWidth + tableOffset * 2;\n    let svgHeight = svgProps.svgSize.height;\n\n    if (numSeats > 0) {\n      let centerX = svgWidth / 2;\n      let centerY = svgHeight / 2;\n\n      for (let i = 0; i < borderCount; i++) {\n        let rotate = (360 / borderCount) * i + 90;\n\n        let anglePositionX =\n          i % 4 === 0 || i % 4 === 3\n            ? tableOffset\n            : i % 4 === 1 || i % 4 === 2\n            ? tableOffset + tableWidth\n            : 0;\n        let anglePositionY =\n          i % 4 === 0 || i % 4 === 1\n            ? tableOffset\n            : i % 4 === 2 || i % 4 === 3\n            ? tableOffset + tableHeight\n            : 0;\n\n        tableProp.push({\n          count: 0,\n          rotate,\n          anglePositionX,\n          anglePositionY,\n          seats: [],\n        });\n      }\n\n      for (let i = 0; i < numSeats; i++) {\n        let groupIndex = i % 4;\n\n        if (numSeats === 2 && i === 1) {\n          let rectGroupIndex = groupIndex % 2 === 0 ? 0 : 2;\n\n          tableProp[rectGroupIndex].count += 1;\n          tableProp[rectGroupIndex].seats.push({\n            id: `seat_${i}`,\n            anglePositionX: tableProp[rectGroupIndex].anglePositionX,\n            anglePositionY: tableProp[rectGroupIndex].anglePositionY,\n          });\n        } else if (i < 4) {\n          tableProp[groupIndex].count += 1;\n          tableProp[groupIndex].seats.push({\n            id: `seat_${i}`,\n            anglePositionX: tableProp[groupIndex].anglePositionX,\n            anglePositionY: tableProp[groupIndex].anglePositionY,\n          });\n        } else {\n          let rectGroupIndex = groupIndex % 2 === 0 ? 1 : 3;\n\n          tableProp[rectGroupIndex].count += 1;\n          tableProp[rectGroupIndex].seats.push({\n            id: `seat_${i}`,\n            anglePositionX: tableProp[rectGroupIndex].anglePositionX,\n            anglePositionY: tableProp[rectGroupIndex].anglePositionY,\n          });\n        }\n      }\n\n      for (let i = 0; i < tableProp.length; i++) {\n        let groupIndex = i % 4;\n\n        let seatsLength = tableProp[i].seats.length;\n\n        if (seatsLength > 0) {\n          let seatsTotalHalfWidth =\n            (seatWidth * seatsLength +\n              spaceBetweenSeats * (seatsLength - 1 > 0 ? seatsLength - 1 : 0)) /\n            2;\n          let startPoint = 0;\n          let direction = 1;\n\n          if (groupIndex === 0) {\n            startPoint = centerY + seatsTotalHalfWidth - seatWidth;\n            direction = -1;\n          } else if (groupIndex === 1) {\n            startPoint = centerX - seatsTotalHalfWidth;\n            direction = 1;\n          } else if (groupIndex === 2) {\n            startPoint = centerY - seatsTotalHalfWidth;\n            direction = 1;\n          } else if (groupIndex === 3) {\n            if (maxSeatsEachBorder > seatsLength) {\n              seatsTotalHalfWidth =\n                (seatWidth * maxSeatsEachBorder +\n                  spaceBetweenSeats *\n                    (maxSeatsEachBorder - 1 > 0 ? maxSeatsEachBorder - 1 : 0)) /\n                2;\n            }\n\n            startPoint = centerX - seatsTotalHalfWidth;\n            direction = 1;\n          }\n\n          for (let j = 0; j < seatsLength; j++) {\n            let step =\n              startPoint + direction * (spaceBetweenSeats * j + seatWidth * j);\n\n            if (groupIndex === 1 || groupIndex === 3) {\n              let offsetDirection = groupIndex === 3 ? -1 : 1;\n              tableProp[i].seats[j].seatStartX = step;\n              tableProp[i].seats[j].seatStartY =\n                tableProp[i].seats[j].anglePositionY -\n                seatHeight / 2 +\n                offsetDirection * seatOffset;\n            } else {\n              tableProp[i].seats[j].seatStartY = step;\n              tableProp[i].seats[j].seatStartX =\n                tableProp[i].seats[j].anglePositionX -\n                seatHeight / 2 -\n                direction * seatOffset;\n            }\n          }\n        }\n\n        seats.push(tableProp[i].seats);\n      }\n    }\n\n    setSvgProps((prevState) => ({\n      ...prevState,\n      seats,\n      svgSize: {\n        ...prevState.svgSize,\n        width: svgWidth,\n      },\n      tableSize: {\n        ...prevState.tableSize,\n        width: tableWidth,\n      },\n    }));\n  }, [numSeats]);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width={svgProps.svgSize.width}\n      height={svgProps.svgSize.height}\n      viewBox={`0 0 ${svgProps.svgSize.width} ${svgProps.svgSize.height}`}\n      {...props}\n    >\n      <defs>\n        <filter\n          id=\"rectangular-shadow\"\n          width=\"118.6%\"\n          height=\"134%\"\n          x=\"-9.3%\"\n          y=\"-17%\"\n          filterUnits=\"objectBoundingBox\"\n        >\n          <feMorphology\n            in=\"SourceAlpha\"\n            operator=\"dilate\"\n            radius=\".5\"\n            result=\"shadowSpreadOuter1\"\n          />\n          <feOffset in=\"shadowSpreadOuter1\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur\n            in=\"shadowOffsetOuter1\"\n            result=\"shadowBlurOuter1\"\n            stdDeviation=\"2.5\"\n          />\n          <feColorMatrix\n            in=\"shadowBlurOuter1\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n          />\n        </filter>\n      </defs>\n\n      <g fill=\"#D8D8D8\" stroke=\"none\">\n        {svgProps.seats &&\n          svgProps.seats.length > 0 &&\n          svgProps.seats.map((border, index) => {\n            return (\n              border &&\n              border.length > 0 &&\n              border.map((seat) => {\n                return (\n                  <rect\n                    key={seat.id}\n                    data-key={seat.id}\n                    width={\n                      index === 0 || index === 2\n                        ? svgProps.seatHeight\n                        : svgProps.seatWidth\n                    }\n                    height={\n                      index === 0 || index === 2\n                        ? svgProps.seatWidth\n                        : svgProps.seatHeight\n                    }\n                    x={seat.seatStartX}\n                    y={seat.seatStartY}\n                    opacity={svgProps.seatOpacity}\n                    rx={svgProps.seatRound}\n                  />\n                );\n              })\n            );\n          })}\n      </g>\n      <rect\n        width={svgProps.tableSize.width}\n        height={svgProps.tableSize.height}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        stroke=\"none\"\n        fill=\"#000\"\n        filter=\"url(#rectangular-shadow)\"\n      />\n      <rect\n        width={svgProps.tableSize.width}\n        height={svgProps.tableSize.height}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        fill=\"currentColor\"\n        stroke=\"none\"\n      />\n    </svg>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nconst defaultOptions = {\n  seatWidth: 26,\n  seatHeight: 18,\n  tableOffset: 6,\n  seatOffsetY: 2,\n  seatRound: 7,\n  seatColor: '#A0A0A0',\n  maxSpaceBetweenSeats: 18,\n  minSpaceBetweenSeats: 4,\n};\n\nexport const RoundTableSvg = ({ numSeats = 0, ...props }) => {\n  const [svgProps, setSvgProps] = useState({\n    seats: [],\n    svgSize: 66,\n    tableSize: 54,\n    tableRotate: 180,\n    spaceBetweenSeats: 18,\n  });\n\n  const calcHalf = (val) => {\n    return val / 2;\n  };\n\n  const getSeats = ({ numSeats, tableRadius, svgSize }) => {\n    let seats = [];\n    const centerCoordinate = calcHalf(svgSize);\n    const { seatWidth, seatHeight, seatOffsetY } = defaultOptions;\n\n    for (let i = 0; i < numSeats; i++) {\n      let seatsCount = numSeats !== 3 ? numSeats : 4;\n      let step = (2 * Math.PI * i) / seatsCount;\n      let rotate = (360 / seatsCount) * i + 90;\n      let seatCenterX = Math.cos(step) * tableRadius + centerCoordinate;\n      let seatCenterY = Math.sin(step) * tableRadius + centerCoordinate;\n      let seatStartX = seatCenterX - calcHalf(seatWidth);\n      let seatStartY = seatCenterY + seatOffsetY - calcHalf(seatHeight);\n\n      seats.push({\n        id: `seat_${i}`,\n        step,\n        rotate,\n        seatCenterX,\n        seatCenterY,\n        seatStartX,\n        seatStartY,\n      });\n    }\n\n    return seats;\n  };\n\n  useEffect(() => {\n    const { seatWidth, tableOffset } = defaultOptions;\n\n    let spaceBetweenSeats =\n      numSeats <= 8\n        ? svgProps.spaceBetweenSeats\n        : numSeats > 8 && numSeats <= 12\n        ? 14\n        : numSeats > 12 && numSeats <= 16\n        ? 10\n        : numSeats > 16 && numSeats <= 20\n        ? 8\n        : numSeats > 20 && numSeats <= 23\n        ? 6\n        : 4;\n\n    let tableRadius =\n      numSeats <= 4\n        ? svgProps.tableSize / 2\n        : (numSeats * (seatWidth + spaceBetweenSeats)) / (2 * Math.PI);\n\n    let svgSize =\n      numSeats <= 4 ? svgProps.svgSize : (tableRadius + tableOffset) * 2;\n    const seats = getSeats({ numSeats, tableRadius, svgSize });\n\n    setSvgProps((prevState) => ({\n      ...prevState,\n      seats,\n      svgSize,\n      tableSize: tableRadius * 2,\n      tableRotate: numSeats === 5 ? 270 : 180,\n    }));\n  }, [numSeats]);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width={svgProps.svgSize}\n      height={svgProps.svgSize}\n      viewBox={`0 0 ${svgProps.svgSize} ${svgProps.svgSize}`}\n      {...props}\n    >\n      <defs>\n        <filter\n          id=\"round-shadow\"\n          width=\"116.7%\"\n          height=\"116.7%\"\n          x=\"-8.3%\"\n          y=\"-8.3%\"\n          filterUnits=\"objectBoundingBox\"\n        >\n          <feMorphology\n            in=\"SourceAlpha\"\n            operator=\"dilate\"\n            radius=\".5\"\n            result=\"shadowSpreadOuter1\"\n          />\n          <feOffset in=\"shadowSpreadOuter1\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur\n            in=\"shadowOffsetOuter1\"\n            result=\"shadowBlurOuter1\"\n            stdDeviation=\"2.5\"\n          />\n          <feColorMatrix\n            in=\"shadowBlurOuter1\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n          />\n        </filter>\n      </defs>\n      <g\n        stroke=\"none\"\n        fill={defaultOptions.seatColor}\n        transform={`rotate(${svgProps.tableRotate} ${svgProps.svgSize / 2} ${\n          svgProps.svgSize / 2\n        })`}\n      >\n        {svgProps.seats &&\n          svgProps.seats.length > 0 &&\n          svgProps.seats.map((seat) => {\n            return (\n              <rect\n                key={seat.id}\n                width={defaultOptions.seatWidth}\n                height={defaultOptions.seatHeight}\n                x={seat.seatStartX}\n                y={seat.seatStartY}\n                transform={`rotate(${seat.rotate} ${seat.seatCenterX} ${seat.seatCenterY})`}\n                rx={defaultOptions.seatRound}\n              />\n            );\n          })}\n      </g>\n\n      <circle\n        cx={calcHalf(svgProps.svgSize)}\n        cy={calcHalf(svgProps.svgSize)}\n        r={calcHalf(svgProps.tableSize)}\n        stroke=\"none\"\n        fill=\"#000\"\n        filter=\"url(#round-shadow)\"\n      />\n      <circle\n        cx={calcHalf(svgProps.svgSize)}\n        cy={calcHalf(svgProps.svgSize)}\n        r={calcHalf(svgProps.tableSize)}\n        fill=\"currentColor\"\n        stroke=\"none\"\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport { SquareTableSvg } from './SquareTableSvg';\nimport { RectangularTableSvg } from './RectangularTableSvg';\nimport { RoundTableSvg } from './RoundTableSvg';\n\nconst tableColors = {\n  free: {\n    shapeColor: '#ffffff',\n    textColor: '#646464',\n  },\n  partiallySeated: {\n    shapeColor: '#fd6c00',\n    textColor: '#ffffff',\n  },\n  seated: {\n    shapeColor: '#fd6c00',\n    textColor: '#ffffff',\n  },\n  entry: {\n    shapeColor: '#b620e0',\n    textColor: '#ffffff',\n  },\n  mainCurse: {\n    shapeColor: '#0a56f1',\n    textColor: '#ffffff',\n  },\n  dessert: {\n    shapeColor: '#eb4469',\n    textColor: '#ffffff',\n  },\n  cleared: {\n    shapeColor: '#f7b500',\n    textColor: '#ffffff',\n  },\n  checkDropped: {\n    shapeColor: '#5eb602',\n    textColor: '#ffffff',\n  },\n  paid: {\n    shapeColor: '#5eb602',\n    textColor: '#ffffff',\n  },\n  bussingNeeded: {\n    shapeColor: '#6d7278',\n    textColor: '#ffffff',\n  },\n  Finished: {\n    shapeColor: '#0686f6',\n    textColor: '#ffffff',\n  },\n};\n\nexport const Shape = ({\n  id,\n  type,\n  name,\n  number,\n  numSeats,\n  positionX,\n  positionY,\n  orientationAngle = 0,\n  scale = 1,\n  icon,\n  progress,\n  status = 'free',\n  ...props\n}) => {\n  return (\n    <div\n      className={`dine-in-table`}\n      style={{ color: tableColors[status].textColor }}\n      {...props}\n    >\n      <div className=\"dine-in-table__box\">\n        <div className=\"dine-in-table__inner\">\n          <div className=\"dine-in-table__number\">{name ? name : number}</div>\n          {status !== 'free' && (\n            <div className=\"dine-in-table__progress-bar\">\n              <div\n                className=\"dine-in-table__progress-line\"\n                style={{ width: `${progress}%` }}\n              />\n            </div>\n          )}\n          {icon && <div className=\"dine-in-table__icon-box\">{icon}</div>}\n        </div>\n      </div>\n      <RenderSvg\n        className=\"dine-in-table__svg\"\n        style={{\n          color: tableColors[status].shapeColor,\n          transform: `rotate(${orientationAngle}deg) scale(${scale})`,\n        }}\n        numSeats={numSeats}\n        type={type}\n      />\n    </div>\n  );\n};\n\nfunction RenderSvg({ type, ...props }) {\n  if (type === 'SquareTable') {\n    return <SquareTableSvg {...props} />;\n  } else if (type === 'RectangularTable') {\n    return <RectangularTableSvg {...props} />;\n  } else if (type === 'RoundTable') {\n    return <RoundTableSvg {...props} />;\n  } else {\n    return null;\n  }\n}\n","import React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport './styles.css';\nimport { TableSeatsTool } from './components/TableSeatsTool';\nimport { Shape } from './components/Shape';\nimport { DessertIcon } from 'nexticons/outline';\n\nconst App = () => {\n  const [circleSeats, setCircleSeats] = useState(8);\n  const [squareSeats, setSquareSeats] = useState(4);\n  const [rectangleSeats, setRectangleSeats] = useState(5);\n\n  return (\n    <div className=\"app-wrap\">\n      <div className=\"table-tool-header\">\n        <TableSeatsTool\n          count={squareSeats}\n          setSeats={setSquareSeats}\n          title=\"Seats for Square Table\"\n          desc=\"Select the number of seats\"\n        />\n\n        <TableSeatsTool\n          count={circleSeats}\n          setSeats={setCircleSeats}\n          title=\"Seats for Circular Table\"\n          desc=\"Select the number of seats\"\n        />\n      </div>\n      <div className=\"table-area\">\n        <div className=\"table-area__inner\">\n          <Shape\n            type=\"SquareTable\"\n            numSeats={squareSeats}\n            number={12}\n            progress={55}\n            icon={<DessertIcon className=\"dine-in-table__icon\" />}\n            status=\"mainCurse\"\n          />\n        </div>\n        <div className=\"table-area__inner\">\n          <Shape\n            type=\"RoundTable\"\n            numSeats={circleSeats}\n            number={13}\n            progress={50}\n            icon={<DessertIcon className=\"dine-in-table__icon\" />}\n            status=\"entry\"\n          />\n        </div>\n      </div>\n      <div className=\"table-tool-header\">\n        <TableSeatsTool\n          count={rectangleSeats}\n          setSeats={setRectangleSeats}\n          title=\"Seats for Rectangle Table\"\n          desc=\"Select the number of seats\"\n        />\n        <div />\n      </div>\n      <div className=\"table-area\">\n        <div className=\"table-area__inner\">\n          <Shape\n            type=\"RectangularTable\"\n            number={14}\n            numSeats={rectangleSeats}\n          />\n        </div>\n        <div className=\"table-area__inner\" />\n      </div>\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}