{"version":3,"sources":["components/TableSeatsTool/index.js","components/RoundTable/index.js","components/SquareTable/index.js","index.js"],"names":["TableSeatsTool","_ref","title","count","setSeats","desc","props","Object","objectWithoutProperties","react_default","a","createElement","assign","className","onClick","esm","width","strokeWidth","RoundTable","_ref$seatsCount","seatsCount","_useState","useState","seats","svgSize","tableSize","tableOffset","seatWidth","seatHeight","seatOffsetY","seatRx","spaceBetweenSeats","_useState2","slicedToArray","svgProps","setSvgProps","useEffect","tableRadius","Math","PI","centerX","centerY","i","rotate","step","seatCenterX","cos","seatCenterY","sin","seatStartX","seatStartY","push","id","concat","prevState","objectSpread","xmlns","xmlnsXlink","height","viewBox","fill","stroke","x","y","filterUnits","in","operator","radius","result","stdDeviation","values","cx","cy","r","length","map","seat","key","opacity","transform","rx","xlinkHref","filter","SquareTable","angleSpace","tableProp","maxSeatsEachBorder","ceil","console","log","groupIndex","seatsLength","seatsTotalHalfWidth","startPoint","direction","j","table","style","backgroundColor","border","index","data-key","App","circleSeats","setCircleSeats","_useState3","_useState4","squareSeats","setSquareSeats","TableSeatsTool_TableSeatsTool","SquareTable_SquareTable","RoundTable_RoundTable","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.98c4272f.chunk.js","sourcesContent":["import React from 'react';\nimport { PlusCircleIcon, PlusIcon } from 'nexticons/solid';\n\nexport const TableSeatsTool = ({ title, count, setSeats, desc, ...props }) => {\n  return (\n    <div className=\"table-seats-tool\" {...props}>\n      {title && <h2 className=\"table-seats-tool__title\">{title}</h2>}\n      <div className=\"table-seats-tool__counter\">\n        <button\n          className=\"table-seats-tool__button\"\n          onClick={() => setSeats(count > 0 ? count - 1 : 0)}\n        >\n          -\n        </button>\n        <div className=\"table-seats-tool__count\">{count}</div>\n        <button\n          className=\"table-seats-tool__button\"\n          onClick={() => setSeats(count < 30 ? count + 1 : 30)}\n        >\n          <PlusIcon width={18} strokeWidth={2} />\n        </button>\n      </div>\n      {desc && (\n        <div className=\"table-seats-tool__info\">\n          <PlusCircleIcon className=\"table-seats-tool__info-icon\" />\n          <p>{desc}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nexport const RoundTable = ({ seatsCount = 0, ...props }) => {\n  const [svgProps, setSvgProps] = useState({\n    seats: [],\n    svgSize: 120,\n    tableSize: 108,\n    tableOffset: 6,\n    seatWidth: 26,\n    seatHeight: 18,\n    seatOffsetY: 3,\n    seatRx: 7,\n    spaceBetweenSeats: 6,\n  });\n\n  useEffect(() => {\n    let seats = [];\n    let tableRadius = 108 / 2;\n    let svgSize = 120;\n    let spaceBetweenSeats = svgProps.spaceBetweenSeats;\n    let seatWidth = svgProps.seatWidth;\n    let seatHeight = svgProps.seatHeight;\n    let tableOffset = svgProps.tableOffset;\n    let seatOffsetY = svgProps.seatOffsetY;\n\n    if (seatsCount > 0) {\n      let tablePerimeter = 2 * Math.PI * tableRadius;\n\n      if (tablePerimeter - seatsCount * (seatWidth + spaceBetweenSeats) <= 0) {\n        tableRadius =\n          (seatsCount * (seatWidth + spaceBetweenSeats)) / (2 * Math.PI);\n        svgSize = (tableRadius + tableOffset) * 2;\n      }\n\n      let centerX = svgSize / 2;\n      let centerY = svgSize / 2;\n\n      for (let i = 0; i < seatsCount; i++) {\n        let rotate = (360 / seatsCount) * i + 90;\n        let step = (2 * Math.PI * i) / seatsCount;\n        let seatCenterX = Math.cos(step) * tableRadius + centerX;\n        let seatCenterY = Math.sin(step) * tableRadius + centerY;\n        let seatStartX = seatCenterX - seatWidth / 2;\n        let seatStartY = seatCenterY + seatOffsetY - seatHeight / 2;\n\n        seats.push({\n          id: `seat_${i}`,\n          step,\n          rotate,\n          seatCenterX,\n          seatCenterY,\n          seatStartX,\n          seatStartY,\n        });\n      }\n    }\n\n    setSvgProps((prevState) => ({\n      ...prevState,\n      seats,\n      svgSize,\n      tableSize: tableRadius * 2,\n    }));\n  }, [seatsCount]);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width={svgProps.svgSize}\n      height={svgProps.svgSize}\n      viewBox={`0 0 ${svgProps.svgSize} ${svgProps.svgSize}`}\n      fill=\"currentColor\"\n      stroke=\"none\"\n      {...props}\n    >\n      <defs>\n        <filter\n          id=\"b\"\n          width=\"116.7%\"\n          height=\"116.7%\"\n          x=\"-8.3%\"\n          y=\"-8.3%\"\n          filterUnits=\"objectBoundingBox\"\n        >\n          <feMorphology\n            in=\"SourceAlpha\"\n            operator=\"dilate\"\n            radius=\".5\"\n            result=\"shadowSpreadOuter1\"\n          />\n          <feOffset in=\"shadowSpreadOuter1\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur\n            in=\"shadowOffsetOuter1\"\n            result=\"shadowBlurOuter1\"\n            stdDeviation=\"2.5\"\n          />\n          <feColorMatrix\n            in=\"shadowBlurOuter1\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n          />\n        </filter>\n        <circle\n          id=\"a\"\n          cx={svgProps.svgSize / 2}\n          cy={svgProps.svgSize / 2}\n          r={svgProps.tableSize / 2}\n          stroke=\"none\"\n        />\n      </defs>\n      <g fill=\"#D8D8D8\" stroke=\"none\">\n        {svgProps.seats &&\n          svgProps.seats.length > 0 &&\n          svgProps.seats.map((seat) => {\n            // console.log('seat', seat);\n            return (\n              <rect\n                key={seat.id}\n                width={svgProps.seatWidth}\n                height={svgProps.seatHeight}\n                x={seat.seatStartX}\n                y={seat.seatStartY}\n                opacity=\"0.7\"\n                transform={`rotate(${seat.rotate} ${seat.seatCenterX} ${seat.seatCenterY})`}\n                rx=\"7\"\n              />\n            );\n          })}\n      </g>\n      <use xlinkHref=\"#a\" fill=\"#000\" filter=\"url(#b)\" />\n      <use xlinkHref=\"#a\" fill=\"currentColor\" />\n    </svg>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nexport const SquareTable = ({ seatsCount = 0, ...props }) => {\n  const [svgProps, setSvgProps] = useState({\n    seats: [],\n    svgSize: 72,\n    tableSize: 54,\n    tableOffset: 9,\n    seatWidth: 26,\n    seatHeight: 18,\n    seatOffsetY: 2,\n    seatRx: 7,\n    spaceBetweenSeats: 10, //18\n    angleSpace: 14,\n  });\n\n  useEffect(() => {\n    let seats = [];\n    let tableProp = [];\n    let tableSize = 54;\n    let svgSize = 72;\n    let spaceBetweenSeats = svgProps.spaceBetweenSeats;\n    let seatWidth = svgProps.seatWidth;\n    let seatHeight = svgProps.seatHeight;\n    let tableOffset = svgProps.tableOffset;\n    let seatOffsetY = svgProps.seatOffsetY;\n    let angleSpace = svgProps.angleSpace;\n    let maxSeatsEachBorder = Math.ceil(seatsCount / 4);\n    console.log('maxSeatsEachBorder', maxSeatsEachBorder);\n\n    if (seatsCount > 0) {\n      const borderCount = 4;\n      let tablePerimeter =\n        borderCount * seatWidth * maxSeatsEachBorder +\n        borderCount * (maxSeatsEachBorder - 1) * spaceBetweenSeats +\n        angleSpace * borderCount * 2;\n      tableSize = tablePerimeter / borderCount;\n      svgSize = tableSize + tableOffset * 2;\n\n      // console.log('tablePerimeter', tablePerimeter);\n      // console.log('tableSize', tableSize);\n      // console.log('!!!!', seatsCount % 4);\n      // console.log(\n      //   'check',\n      //   4 * (seatWidth * test) +\n      //     4 * (test - 1) * spaceBetweenSeats +\n      //     angleSpace * 8\n      // );\n      // if (seatsCount <= 4) {\n      // console.log('check <= 4', seatsCount * seatWidth + angleSpace * 8);\n      // } else if (seatsCount > 4) {\n      // console.log('check > 4', seatsCount * seatWidth + angleSpace * 8);\n      // }\n\n      // if (tablePerimeter - seatsCount * (seatWidth + spaceBetweenSeats) <= 0) {\n      // tableSize =\n      //   (seatsCount * (seatWidth + spaceBetweenSeats)) / (2 * Math.PI);\n      // svgSize = (tableRadius + tableOffset) * 2;\n      // }\n\n      //\n      // let centerX = svgSize / 2;\n      // let centerY = svgSize / 2;\n\n      // console.log('svgSize', svgSize / 2);\n      //\n\n      let centerX = svgSize / 2;\n      let centerY = svgSize / 2;\n\n      for (let i = 0; i < borderCount; i++) {\n        let rotate = (360 / borderCount) * i + 90;\n        let step = (2 * Math.PI * i) / seatsCount;\n        let seatCenterX = (Math.cos(step) * tableSize) / 2 + centerX;\n        let seatCenterY = (Math.sin(step) * tableSize) / 2 + centerY;\n\n        /* let anglePositionX =\n          i % 4 === 0 || i % 4 === 3\n            ? tableOffset\n            : i % 4 === 1 || i % 4 === 2\n            ? tableOffset + tableSize\n            : 0;\n        let anglePositionY =\n          i % 4 === 0 || i % 4 === 1\n            ? tableOffset\n            : i % 4 === 2 || i % 4 === 3\n            ? tableOffset + tableSize\n            : 0;*/\n\n        tableProp.push({\n          step,\n          rotate,\n          count: 0,\n          seatCenterX,\n          seatCenterY,\n          seats: [],\n        });\n        // seats.push([]);\n      }\n\n      for (let i = 0; i < seatsCount; i++) {\n        let groupIndex = i % 4;\n        tableProp[groupIndex].count += 1;\n        //   let rotate = (360 / 4) * i + 90;\n        //   let step = (2 * Math.PI * i) / 4;\n        //   let seatCenterX = (Math.cos(step) * tableSize) / 2 + centerX;\n        //   let seatCenterY = (Math.sin(step) * tableSize) / 2 + centerY;\n        //   let seatStartX = seatCenterX - seatWidth / 2;\n        // let seatStartY = seatCenterY + seatOffsetY - seatHeight / 2;\n        // if (groupIndex === 0) {\n        //   groupIndex = 0;\n        // } else if (groupIndex === 1) {\n        //   groupIndex = 1;\n        // } else if (groupIndex === 2) {\n        //   groupIndex = 2;\n        // } else if (groupIndex === 3) {\n        //   groupIndex = 3;\n        // }\n        console.log(`groupIndex --- ${groupIndex} seatID === seat_${i}`);\n\n        tableProp[groupIndex].seats.push({\n          id: `seat_${i}`,\n          //     step,\n          // rotate: tableProp[groupIndex].rotate,\n          //     seatCenterX,\n          //     seatCenterY,\n          // seatStartX: tableProp[groupIndex].anglePositionX,\n          // seatStartY: tableProp[groupIndex].anglePositionY,\n          rotate: tableProp[groupIndex].rotate,\n          seatCenterX: tableProp[groupIndex].seatCenterX,\n          seatCenterY: tableProp[groupIndex].seatCenterY,\n          seatStartX: tableProp[groupIndex].seatCenterX,\n          seatStartY: tableProp[groupIndex].seatCenterY,\n        });\n\n        // seats[groupIndex]\n      }\n\n      for (let i = 0; i < tableProp.length; i++) {\n        let groupIndex = i % 4;\n\n        let seatsLength = tableProp[i].seats.length;\n        // let checkBorder =\n        //   tableSize -\n        //   (angleSpace * 2 +\n        //     seatsLength * seatWidth +\n        //     (seatsLength - 1) * spaceBetweenSeats);\n        // let angleOffset =\n        //   checkVal === 0\n        //     ? angleSpace\n        //     : (tableSize -\n        //         (seatsLength * seatWidth +\n        //           (seatsLength - 1) * spaceBetweenSeats)) /\n        //       2;\n\n        // console.log('check', checkVal);\n        // console.log('angleOffset', angleOffset);\n\n        // centered on each border\n        if (seatsLength > 0) {\n          let seatsTotalHalfWidth =\n            (seatWidth * seatsLength +\n              spaceBetweenSeats * (seatsLength - 1 > 0 ? seatsLength - 1 : 0)) /\n            2;\n          let startPoint = 0;\n          let direction = 1;\n\n          if (groupIndex === 0) {\n            startPoint = centerY + seatsTotalHalfWidth - seatWidth;\n            direction = -1;\n          } else if (groupIndex === 1) {\n            startPoint = centerX - seatsTotalHalfWidth;\n            direction = 1;\n          } else if (groupIndex === 2) {\n            startPoint = centerY - seatsTotalHalfWidth;\n            direction = 1;\n          } else if (groupIndex === 3) {\n            startPoint = centerX + seatsTotalHalfWidth - seatWidth;\n            direction = -1;\n          }\n\n          for (let j = 0; j < seatsLength; j++) {\n            let step =\n              startPoint + direction * (spaceBetweenSeats * j + seatWidth * j);\n\n            if (j % 2) {\n              // odd = 1\n              if (groupIndex === 1 || groupIndex === 3) {\n                tableProp[i].seats[j].seatStartX = step;\n                tableProp[i].seats[j].seatStartY =\n                  tableProp[i].seats[j].seatCenterY - seatHeight / 2;\n              } else {\n                tableProp[i].seats[j].seatStartY = step;\n                tableProp[i].seats[j].seatStartX =\n                  tableProp[i].seats[j].seatCenterX - seatHeight / 2;\n              }\n            } else {\n              // event = 0\n              console.log('startPoint', startPoint);\n              if (groupIndex === 1 || groupIndex === 3) {\n                tableProp[i].seats[j].seatStartX = step;\n                tableProp[i].seats[j].seatStartY =\n                  tableProp[i].seats[j].seatCenterY - seatHeight / 2;\n              } else {\n                tableProp[i].seats[j].seatStartY = step;\n                tableProp[i].seats[j].seatStartX =\n                  tableProp[i].seats[j].seatCenterX - seatHeight / 2;\n              }\n            }\n\n            // console.log()\n            // if (groupIndex ) {\n            // tableProp[i].seats[j].seatStartX =\n            //   startPoint + spaceBetweenSeats * j + seatWidth * j;\n            //\n            // tableProp[i].seats[j].seatStartY =\n            //   tableProp[i].seats[j].seatCenterY - seatHeight / 2;\n            //even 2\n            // let startPoint =\n            //   centerX - (seatWidth * seatsLength + spaceBetweenSeats * j) / 2;\n            // tableProp[i].seats[j].seatStartX =\n            //   startPoint + spaceBetweenSeats * j + seatWidth * j;\n            // tableProp[i].seats[j].seatStartX =\n            //   tableOffset +\n            //   spaceBetweenSeats +\n            //   j * seatWidth +\n            //   j * angleOffset;\n            // tableProp[i].seats[j].seatStartY =\n            //   tableProp[i].anglePositionY - seatHeight / 2;\n            // seatCenterX: tableProp[groupIndex].anglePositionX,\n            // tableProp[i].seats[j].seatCenterX =\n            //   tableProp[i].seats[j].seatStartX + seatWidth / 2;\n            // tableProp[i].seats[j].seatCenterY =\n            //   tableProp[i].anglePositionY + seatHeight / 2;\n            // } else {\n            //odd 1\n            // tableProp[i].seats[j].seatStartY =\n            //   startPoint + spaceBetweenSeats * j + seatWidth * j;\n            //\n            // tableProp[i].seats[j].seatStartX =\n            //   tableProp[i].seats[j].seatCenterX - seatHeight / 2;\n            // tableProp[i].seats[j].seatStartY =\n            //   tableOffset +\n            //   spaceBetweenSeats +\n            //   j * seatWidth +\n            //   j * angleOffset;\n            // tableProp[i].seats[j].seatStartX =\n            //   tableProp[i].anglePositionX - seatHeight / 2 - seatOffsetY;\n            // seatCenterX: tableProp[groupIndex].anglePositionX,\n            // seatCenterY: tableProp[groupIndex].anglePositionY,\n            // tableProp[i].seats[j].seatCenterX =\n            //   tableProp[i].anglePositionX + seatWidth / 2;\n            // tableProp[i].seats[j].seatCenterY =\n            //   tableProp[i].seats[j].seatStartY + seatHeight / 2;\n            // }\n          }\n        }\n\n        seats.push(tableProp[i].seats);\n      }\n\n      console.table(tableProp);\n      // console.table(seats);\n    }\n\n    setSvgProps((prevState) => ({\n      ...prevState,\n      seats,\n      svgSize,\n      tableSize,\n    }));\n  }, [seatsCount]);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      // width=\"115\"\n      // height=\"71\"\n      // viewBox=\"0 0 115 71\"\n      width={svgProps.svgSize}\n      height={svgProps.svgSize}\n      viewBox={`0 0 ${svgProps.svgSize} ${svgProps.svgSize}`}\n      style={{ backgroundColor: 'grey' }}\n      fill=\"currentColor\"\n      stroke=\"none\"\n      {...props}\n    >\n      {/* {' '}\n      <defs>\n        <filter\n          id=\"b\"\n          width=\"118.6%\"\n          height=\"134%\"\n          x=\"-9.3%\"\n          y=\"-17%\"\n          filterUnits=\"objectBoundingBox\"\n        >\n          <feMorphology\n            in=\"SourceAlpha\"\n            operator=\"dilate\"\n            radius=\".5\"\n            result=\"shadowSpreadOuter1\"\n          />\n          <feOffset in=\"shadowSpreadOuter1\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur\n            in=\"shadowOffsetOuter1\"\n            result=\"shadowBlurOuter1\"\n            stdDeviation=\"2.5\"\n          />\n          <feColorMatrix\n            in=\"shadowBlurOuter1\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n          />\n        </filter>\n        <rect\n          id=\"a\"\n          width={svgProps.svgSize}\n          height={svgProps.svgSize}\n          x=\"9\"\n          y=\"9\"\n          rx=\"12\"\n        />\n      </defs>*/}\n      {/*     <rect\n        // id=\"a\"\n        width={svgProps.tableSize}\n        height={svgProps.tableSize}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        stroke=\"none\"\n      />*/}\n      <rect\n        // id=\"a\"\n        width={svgProps.tableSize}\n        height={svgProps.tableSize}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        stroke=\"none\"\n      />\n      <g fill=\"#D8D8D8\" stroke=\"none\">\n        {svgProps.seats &&\n          svgProps.seats.length > 0 &&\n          svgProps.seats.map((border, index) => {\n            // console.log('border', border);\n            return (\n              border &&\n              border.length > 0 &&\n              border.map((seat) => {\n                // console.log('seat', seat);\n                // console.log('svgProps.seatWidth', svgProps.seatWidth);\n                // console.log('svgProps.seatHeight', svgProps.seatHeight);\n                return (\n                  <rect\n                    key={seat.id}\n                    data-key={seat.id}\n                    width={\n                      index % 2 === 1 ? svgProps.seatWidth : svgProps.seatHeight\n                    }\n                    height={\n                      index % 2 === 1 ? svgProps.seatHeight : svgProps.seatWidth\n                    }\n                    x={seat.seatStartX}\n                    y={seat.seatStartY}\n                    opacity=\"1\"\n                    // transform={`rotate(${seat.rotate} ${seat.seatCenterX} ${seat.seatCenterY})`}\n                    rx=\"7\"\n                  />\n                );\n              })\n            );\n          })}\n      </g>\n    </svg>\n  );\n};\n","import React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport './styles.css';\nimport { TableSeatsTool } from './components/TableSeatsTool';\nimport { RoundTable } from './components/RoundTable';\nimport { SquareTable } from './components/SquareTable';\n\nconst App = () => {\n  const [circleSeats, setCircleSeats] = useState(8);\n  const [squareSeats, setSquareSeats] = useState(4);\n\n  return (\n    <div className=\"app-wrap\">\n      <div className=\"table-tool-header\">\n        <TableSeatsTool\n          count={squareSeats}\n          setSeats={setSquareSeats}\n          title=\"Seats for Rectangle Table\"\n          desc=\"Select the number of seats\"\n        />\n        <TableSeatsTool\n          count={circleSeats}\n          setSeats={setCircleSeats}\n          title=\"Seats for Circular Table\"\n          desc=\"Select the number of seats\"\n        />\n      </div>\n      <div className=\"table-area\">\n        <div className=\"table-area__inner\">\n          <SquareTable width={320} height={320} seatsCount={squareSeats} />\n        </div>\n        <div className=\"table-area__inner\">\n          <RoundTable seatsCount={circleSeats} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}