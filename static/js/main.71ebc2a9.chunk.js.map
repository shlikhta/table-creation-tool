{"version":3,"sources":["components/TableSeatsTool/index.js","components/DineInTable/SquareTableSvg.js","components/DineInTable/RectangularTableSvg.js","components/DineInTable/RoundTableSvg.js","components/DineInTable/index.js","index.js"],"names":["TableSeatsTool","_ref","title","count","setSeats","desc","props","Object","objectWithoutProperties","react_default","a","createElement","assign","className","onClick","esm","width","strokeWidth","SquareTableSvg","_ref$numSeats","numSeats","_useState","useState","seats","svgSize","tableSize","tableOffset","seatWidth","seatHeight","seatOffset","seatRound","seatOpacity","spaceBetweenSeats","angleSpace","_useState2","slicedToArray","svgProps","setSvgProps","useMemo","tableProp","maxSeatsEachBorder","Math","ceil","tableWidth","centerX","centerY","i","rotate","anglePositionX","anglePositionY","push","groupIndex","rectGroupIndex","id","concat","length","seatsLength","seatsTotalHalfWidth","startPoint","direction","j","step","seatStartX","seatStartY","prevState","objectSpread","xmlns","xmlnsXlink","height","viewBox","x","y","filterUnits","in","operator","radius","result","stdDeviation","values","fill","stroke","map","border","index","seat","key","data-key","opacity","rx","filter","RectangularTableSvg","svgWidth","svgHeight","offsetDirection","RoundTableSvg","tableRotate","seatOffsetY","tableRadius","PI","seatsCount","seatCenterX","cos","seatCenterY","sin","transform","cx","cy","r","DineInTable","type","name","number","_ref$orientationAngle","positionX","positionY","orientationAngle","icon","scale","progress","_ref$showProgress","showProgress","tableColor","textTheme","style","RenderSvg","color","_ref2","console","log","SquareTableSvg_SquareTableSvg","RectangularTableSvg_RectangularTableSvg","RoundTableSvg_RoundTableSvg","App","circleSeats","setCircleSeats","_useState3","_useState4","squareSeats","setSquareSeats","_useState5","_useState6","rectangleSeats","setRectangleSeats","TableSeatsTool_TableSeatsTool","DineInTable_DineInTable","outline_esm","render","src_App","document","getElementById"],"mappings":"6KAGaA,EAAiB,SAAAC,GAAgD,IAA7CC,EAA6CD,EAA7CC,MAAOC,EAAsCF,EAAtCE,MAAOC,EAA+BH,EAA/BG,SAAUC,EAAqBJ,EAArBI,KAASC,EAAYC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,qCAC5E,OACEQ,EAAAC,EAAAC,cAAA,MAAAJ,OAAAK,OAAA,CAAKC,UAAU,oBAAuBP,GACnCJ,GAASO,EAAAC,EAAAC,cAAA,MAAIE,UAAU,2BAA2BX,GACnDO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACbJ,EAAAC,EAAAC,cAAA,UACEE,UAAU,2BACVC,QAAS,kBAAMV,EAASD,EAAQ,EAAIA,EAAQ,EAAI,KAFlD,KAMAM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BV,GAC1CM,EAAAC,EAAAC,cAAA,UACEE,UAAU,2BACVC,QAAS,kBAAMV,EAASD,EAAQ,GAAKA,EAAQ,EAAI,MAEjDM,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUC,MAAO,GAAIC,YAAa,MAGrCZ,GACCI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAgBF,UAAU,gCAC1BJ,EAAAC,EAAAC,cAAA,SAAIN,aCvBDa,EAAiB,SAAAjB,GAAgC,IAAAkB,EAAAlB,EAA7BmB,gBAA6B,IAAAD,EAAlB,EAAkBA,EAAZb,EAAYC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,cAAAoB,EAC5BC,mBAAS,CACvCC,MAAO,GACPC,QAAS,GACTC,UAAW,GACXC,YAAa,EACbC,UAAW,GACXC,WAAY,GACZC,WAAY,EACZC,UAAW,EACXC,YAAa,IACbC,kBAAmB,EACnBC,WAAY,KAZ8CC,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAc,EAAA,GACrDe,EADqDF,EAAA,GAC3CG,EAD2CH,EAAA,GAiK5D,OAlJAI,kBAAQ,WACN,IACIf,EAAQ,GACRgB,EAAY,GACZP,EACFZ,GAAY,GACRgB,EAASJ,kBACTZ,EAAW,IAAMA,GAAY,GAC7B,EACA,EACFO,EAAYS,EAAST,UACrBC,EAAaQ,EAASR,WACtBF,EAAcU,EAASV,YACvBG,EAAaO,EAASP,WACtBI,EAAaG,EAASH,WACtBO,EAAqBC,KAAKC,KAAKtB,EAAW,GAK1CuB,GAnBgB,EAgBJhB,EAAYa,EAhBR,GAiBHA,EAAqB,GAAKR,EAjBvB,EAkBlBC,EAA2B,GAlBT,EAoBhBR,EAAYkB,EAAahB,EAAYgB,EAAaP,EAASX,UAC3DD,EAAUC,EAA0B,EAAdC,EAE1B,GAAIN,EAAW,EAAG,CAMhB,IALA,IAEIwB,EAAUpB,EAAU,EACpBqB,EAAUrB,EAAU,EAEfsB,EAAI,EAAGA,EALI,EAKaA,IAAK,CACpC,IAAIC,EAAU,GAAqBD,EAAI,GAEnCE,EACFF,EAAI,IAAM,GAAKA,EAAI,IAAM,EACrBpB,EACAoB,EAAI,IAAM,GAAKA,EAAI,IAAM,EACzBpB,EAAcD,EACd,EACFwB,EACFH,EAAI,IAAM,GAAKA,EAAI,IAAM,EACrBpB,EACAoB,EAAI,IAAM,GAAKA,EAAI,IAAM,EACzBpB,EAAcD,EACd,EAENc,EAAUW,KAAK,CACb/C,MAAO,EACP4C,SACAC,iBACAC,iBACA1B,MAAO,KAIX,IAAK,IAAIuB,EAAI,EAAGA,EAAI1B,EAAU0B,IAAK,CACjC,IAAIK,EAAaL,EAAI,EAErB,GAAiB,IAAb1B,GAAwB,IAAN0B,EAAS,CAC7B,IAAIM,EAAiBD,EAAa,IAAM,EAAI,EAAI,EAEhDZ,EAAUa,GAAgBjD,OAAS,EACnCoC,EAAUa,GAAgB7B,MAAM2B,KAAK,CACnCG,GAAE,QAAAC,OAAUR,GACZE,eAAgBT,EAAUa,GAAgBJ,eAC1CC,eAAgBV,EAAUa,GAAgBH,sBAEvC,GAAIH,EAAI,EACbP,EAAUY,GAAYhD,OAAS,EAC/BoC,EAAUY,GAAY5B,MAAM2B,KAAK,CAC/BG,GAAE,QAAAC,OAAUR,GACZE,eAAgBT,EAAUY,GAAYH,eACtCC,eAAgBV,EAAUY,GAAYF,qBAEnC,CACL,IAAIG,EAAgC,IAAfD,EAAmB,EAAIA,EAAa,EAEzDZ,EAAUa,GAAgBjD,OAAS,EACnCoC,EAAUa,GAAgB7B,MAAM2B,KAAK,CACnCG,GAAE,QAAAC,OAAUR,GACZE,eAAgBT,EAAUa,GAAgBJ,eAC1CC,eAAgBV,EAAUa,GAAgBH,kBAKhD,IAAK,IAAIH,EAAI,EAAGA,EAAIP,EAAUgB,OAAQT,IAAK,CACzC,IAAIK,EAAaL,EAAI,EAEjBU,EAAcjB,EAAUO,GAAGvB,MAAMgC,OAErC,GAAIC,EAAc,EAAG,CACnB,IAAIC,GACD9B,EAAY6B,EACXxB,GAAqBwB,EAAc,EAAI,EAAIA,EAAc,EAAI,IAC/D,EACEE,EAAa,EACbC,EAAY,EAEG,IAAfR,GACFO,EAAab,EAAUY,EAAsB9B,EAC7CgC,GAAa,GACW,IAAfR,GACTO,EAAad,EAAUa,EACvBE,EAAY,GACY,IAAfR,GACTO,EAAab,EAAUY,EACvBE,EAAY,GACY,IAAfR,IACTO,EAAad,EAAUa,EAAsB9B,EAC7CgC,GAAa,GAGf,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAaI,IAAK,CACpC,IAAIC,EACFH,EAAaC,GAAa3B,EAAoB4B,EAAIjC,EAAYiC,GAE7C,IAAfT,GAAmC,IAAfA,GACtBZ,EAAUO,GAAGvB,MAAMqC,GAAGE,WAAaD,EACnCtB,EAAUO,GAAGvB,MAAMqC,GAAGG,WACpBxB,EAAUO,GAAGvB,MAAMqC,GAAGX,eACtBrB,EAAa,EACb+B,EAAY9B,IAEdU,EAAUO,GAAGvB,MAAMqC,GAAGG,WAAaF,EACnCtB,EAAUO,GAAGvB,MAAMqC,GAAGE,WACpBvB,EAAUO,GAAGvB,MAAMqC,GAAGZ,eACtBpB,EAAa,EACb+B,EAAY9B,IAKpBN,EAAM2B,KAAKX,EAAUO,GAAGvB,QAI5Bc,EAAY,SAAC2B,GAAD,OAAAzD,OAAA0D,EAAA,EAAA1D,CAAA,GACPyD,EADO,CAEVzC,QACAC,UACAC,YACAO,yBAED,CAACZ,IAGFX,EAAAC,EAAAC,cAAA,MAAAJ,OAAAK,OAAA,CACEsD,MAAM,6BACNC,WAAW,+BACXnD,MAAOoB,EAASZ,QAChB4C,OAAQhC,EAASZ,QACjB6C,QAAO,OAAAf,OAASlB,EAASZ,QAAlB,KAAA8B,OAA6BlB,EAASZ,UACzClB,GAEJG,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UACE0C,GAAG,gBACHrC,MAAM,SACNoD,OAAO,SACPE,EAAE,QACFC,EAAE,QACFC,YAAY,qBAEZ/D,EAAAC,EAAAC,cAAA,gBACE8D,GAAG,cACHC,SAAS,SACTC,OAAO,KACPC,OAAO,uBAETnE,EAAAC,EAAAC,cAAA,YAAU8D,GAAG,qBAAqBG,OAAO,uBACzCnE,EAAAC,EAAAC,cAAA,kBACE8D,GAAG,qBACHG,OAAO,mBACPC,aAAa,QAEfpE,EAAAC,EAAAC,cAAA,iBACE8D,GAAG,mBACHK,OAAO,gDAKbrE,EAAAC,EAAAC,cAAA,KAAGoE,KAAK,UAAUC,OAAO,QACtB5C,EAASb,OACRa,EAASb,MAAMgC,OAAS,GACxBnB,EAASb,MAAM0D,IAAI,SAACC,EAAQC,GAC1B,OACED,GACAA,EAAO3B,OAAS,GAChB2B,EAAOD,IAAI,SAACG,GACV,OACE3E,EAAAC,EAAAC,cAAA,QACE0E,IAAKD,EAAK/B,GACViC,WAAUF,EAAK/B,GACfrC,MACEmE,EAAQ,IAAM,EAAI/C,EAAST,UAAYS,EAASR,WAElDwC,OACEe,EAAQ,IAAM,EAAI/C,EAASR,WAAaQ,EAAST,UAEnD2C,EAAGc,EAAKtB,WACRS,EAAGa,EAAKrB,WACRwB,QAASnD,EAASL,YAClByD,GAAIpD,EAASN,iBAO3BrB,EAAAC,EAAAC,cAAA,QACEK,MAAOoB,EAASX,UAChB2C,OAAQhC,EAASX,UACjB6C,EAAE,IACFC,EAAE,IACFiB,GAAG,KACHR,OAAO,OACPD,KAAK,OACLU,OAAO,wBAEThF,EAAAC,EAAAC,cAAA,QACEK,MAAOoB,EAASX,UAChB2C,OAAQhC,EAASX,UACjB6C,EAAE,IACFC,EAAE,IACFiB,GAAG,KACHT,KAAK,eACLC,OAAO,WCnPFU,EAAsB,SAAAzF,GAAgC,IAAAkB,EAAAlB,EAA7BmB,gBAA6B,IAAAD,EAAlB,EAAkBA,EAAZb,EAAYC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,cAAAoB,EACjCC,mBAAS,CACvCC,MAAO,GACPC,QAAS,CACPR,MAAO,GACPoD,OAAQ,IAEV3C,UAAW,CACTT,MAAO,GACPoD,OAAQ,IAEV1C,YAAa,EACbC,UAAW,GACXC,WAAY,GACZC,WAAY,EACZC,UAAW,EACXC,YAAa,IACbC,kBAAmB,GACnBC,WAAY,KAlBmDC,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAc,EAAA,GAC1De,EAD0DF,EAAA,GAChDG,EADgDH,EAAA,GA8LjE,OAzKAI,kBAAQ,WACN,IAAIf,EAAQ,GACRgB,EAAY,GACZI,EAAa,GAEbgD,EAAW,GAEX3D,EACFZ,GAAY,EACRgB,EAASJ,kBACTZ,EAAW,GAAKA,GAAY,GAC5B,GACAA,EAAW,IAAMA,GAAY,GAC7B,GACAA,EAAW,IAAMA,GAAY,GAC7B,EACA,EACFO,EAAYS,EAAST,UACrBC,EAAaQ,EAASR,WACtBF,EAAcU,EAASV,YACvBG,EAAaO,EAASP,WACtBI,EAAaG,EAASH,WACtBO,EAAqBC,KAAKC,MAAMtB,EAAW,GAAK,GAEpD,GAAIA,EAAW,EAAG,CAehB,IAdA,IAWIwB,GAFJ+C,GADAhD,GADAA,GALE,IACA,GACGhB,EAAYa,EACXR,GAAqBQ,EAAqB,GAC7B,EAAbP,GACyB,KAAmB,GACxBN,EAAYgB,EAAa,IACb,EAAdjB,GAEC,EAGhBoB,EAAI,EAAGA,EAdI,EAcaA,IAAK,CACpC,IAAIC,EAAU,GAAqBD,EAAI,GAEnCE,EACFF,EAAI,IAAM,GAAKA,EAAI,IAAM,EACrBpB,EACAoB,EAAI,IAAM,GAAKA,EAAI,IAAM,EACzBpB,EAAciB,EACd,EACFM,EACFH,EAAI,IAAM,GAAKA,EAAI,IAAM,EACrBpB,EACAoB,EAAI,IAAM,GAAKA,EAAI,IAAM,EACzBpB,EAhDQ,GAiDR,EAENa,EAAUW,KAAK,CACb/C,MAAO,EACP4C,SACAC,iBACAC,iBACA1B,MAAO,KAIX,IAAK,IAAIuB,EAAI,EAAGA,EAAI1B,EAAU0B,IAAK,CACjC,IAAIK,EAAaL,EAAI,EAErB,GAAiB,IAAb1B,GAAwB,IAAN0B,EAAS,CAC7B,IAAIM,EAAiBD,EAAa,IAAM,EAAI,EAAI,EAEhDZ,EAAUa,GAAgBjD,OAAS,EACnCoC,EAAUa,GAAgB7B,MAAM2B,KAAK,CACnCG,GAAE,QAAAC,OAAUR,GACZE,eAAgBT,EAAUa,GAAgBJ,eAC1CC,eAAgBV,EAAUa,GAAgBH,sBAEvC,GAAIH,EAAI,EACbP,EAAUY,GAAYhD,OAAS,EAC/BoC,EAAUY,GAAY5B,MAAM2B,KAAK,CAC/BG,GAAE,QAAAC,OAAUR,GACZE,eAAgBT,EAAUY,GAAYH,eACtCC,eAAgBV,EAAUY,GAAYF,qBAEnC,CACL,IAAIG,EAAiBD,EAAa,IAAM,EAAI,EAAI,EAEhDZ,EAAUa,GAAgBjD,OAAS,EACnCoC,EAAUa,GAAgB7B,MAAM2B,KAAK,CACnCG,GAAE,QAAAC,OAAUR,GACZE,eAAgBT,EAAUa,GAAgBJ,eAC1CC,eAAgBV,EAAUa,GAAgBH,kBAKhD,IAAK,IAAIH,EAAI,EAAGA,EAAIP,EAAUgB,OAAQT,IAAK,CACzC,IAAIK,EAAaL,EAAI,EAEjBU,EAAcjB,EAAUO,GAAGvB,MAAMgC,OAErC,GAAIC,EAAc,EAAG,CACnB,IAAIC,GACD9B,EAAY6B,EACXxB,GAAqBwB,EAAc,EAAI,EAAIA,EAAc,EAAI,IAC/D,EACEE,EAAa,EACbC,EAAY,EAEG,IAAfR,GACFO,EAxEQkC,GAwEenC,EAAsB9B,EAC7CgC,GAAa,GACW,IAAfR,GACTO,EAAad,EAAUa,EACvBE,EAAY,GACY,IAAfR,GACTO,EA9EQkC,GA8EenC,EACvBE,EAAY,GACY,IAAfR,IACLX,EAAqBgB,IACvBC,GACG9B,EAAYa,EACXR,GACGQ,EAAqB,EAAI,EAAIA,EAAqB,EAAI,IAC3D,GAGJkB,EAAad,EAAUa,EACvBE,EAAY,GAGd,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAaI,IAAK,CACpC,IAAIC,EACFH,EAAaC,GAAa3B,EAAoB4B,EAAIjC,EAAYiC,GAEhE,GAAmB,IAAfT,GAAmC,IAAfA,EAAkB,CACxC,IAAI0C,EAAiC,IAAf1C,GAAoB,EAAI,EAC9CZ,EAAUO,GAAGvB,MAAMqC,GAAGE,WAAaD,EACnCtB,EAAUO,GAAGvB,MAAMqC,GAAGG,WACpBxB,EAAUO,GAAGvB,MAAMqC,GAAGX,eACtBrB,EAAa,EACbiE,EAAkBhE,OAEpBU,EAAUO,GAAGvB,MAAMqC,GAAGG,WAAaF,EACnCtB,EAAUO,GAAGvB,MAAMqC,GAAGE,WACpBvB,EAAUO,GAAGvB,MAAMqC,GAAGZ,eACtBpB,EAAa,EACb+B,EAAY9B,GAKpBN,EAAM2B,KAAKX,EAAUO,GAAGvB,QAI5Bc,EAAY,SAAC2B,GAAD,OAAAzD,OAAA0D,EAAA,EAAA1D,CAAA,GACPyD,EADO,CAEVzC,QACAC,QAAQjB,OAAA0D,EAAA,EAAA1D,CAAA,GACHyD,EAAUxC,QADR,CAELR,MAAO2E,IAETlE,UAAUlB,OAAA0D,EAAA,EAAA1D,CAAA,GACLyD,EAAUvC,UADN,CAEPT,MAAO2B,SAGV,CAACvB,IAGFX,EAAAC,EAAAC,cAAA,MAAAJ,OAAAK,OAAA,CACEsD,MAAM,6BACNC,WAAW,+BACXnD,MAAOoB,EAASZ,QAAQR,MACxBoD,OAAQhC,EAASZ,QAAQ4C,OACzBC,QAAO,OAAAf,OAASlB,EAASZ,QAAQR,MAA1B,KAAAsC,OAAmClB,EAASZ,QAAQ4C,SACvD9D,GAEJG,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UACE0C,GAAG,qBACHrC,MAAM,SACNoD,OAAO,OACPE,EAAE,QACFC,EAAE,OACFC,YAAY,qBAEZ/D,EAAAC,EAAAC,cAAA,gBACE8D,GAAG,cACHC,SAAS,SACTC,OAAO,KACPC,OAAO,uBAETnE,EAAAC,EAAAC,cAAA,YAAU8D,GAAG,qBAAqBG,OAAO,uBACzCnE,EAAAC,EAAAC,cAAA,kBACE8D,GAAG,qBACHG,OAAO,mBACPC,aAAa,QAEfpE,EAAAC,EAAAC,cAAA,iBACE8D,GAAG,mBACHK,OAAO,gDAKbrE,EAAAC,EAAAC,cAAA,KAAGoE,KAAK,UAAUC,OAAO,QACtB5C,EAASb,OACRa,EAASb,MAAMgC,OAAS,GACxBnB,EAASb,MAAM0D,IAAI,SAACC,EAAQC,GAC1B,OACED,GACAA,EAAO3B,OAAS,GAChB2B,EAAOD,IAAI,SAACG,GACV,OACE3E,EAAAC,EAAAC,cAAA,QACE0E,IAAKD,EAAK/B,GACViC,WAAUF,EAAK/B,GACfrC,MACY,IAAVmE,GAAyB,IAAVA,EACX/C,EAASR,WACTQ,EAAST,UAEfyC,OACY,IAAVe,GAAyB,IAAVA,EACX/C,EAAST,UACTS,EAASR,WAEf0C,EAAGc,EAAKtB,WACRS,EAAGa,EAAKrB,WACRwB,QAASnD,EAASL,YAClByD,GAAIpD,EAASN,iBAO3BrB,EAAAC,EAAAC,cAAA,QACEK,MAAOoB,EAASX,UAAUT,MAC1BoD,OAAQhC,EAASX,UAAU2C,OAC3BE,EAAE,IACFC,EAAE,IACFiB,GAAG,KACHR,OAAO,OACPD,KAAK,OACLU,OAAO,6BAEThF,EAAAC,EAAAC,cAAA,QACEK,MAAOoB,EAASX,UAAUT,MAC1BoD,OAAQhC,EAASX,UAAU2C,OAC3BE,EAAE,IACFC,EAAE,IACFiB,GAAG,KACHT,KAAK,eACLC,OAAO,WCpRFc,EAAgB,SAAA7F,GAAgC,IAAAkB,EAAAlB,EAA7BmB,gBAA6B,IAAAD,EAAlB,EAAkBA,EAAZb,EAAYC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,cAAAoB,EAC3BC,mBAAS,CACvCC,MAAO,GACPC,QAAS,GACTC,UAAW,GACXsE,YAAa,IACbrE,YAAa,EACbC,UAAW,GACXC,WAAY,GACZoE,YAAa,EACblE,UAAW,EACXC,YAAa,IACbC,kBAAmB,KAZsCE,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAc,EAAA,GACpDe,EADoDF,EAAA,GAC1CG,EAD0CH,EAAA,GAwE3D,OAzDAI,kBAAQ,WACN,IAAIf,EAAQ,GACRS,EACFZ,GAAY,EACRgB,EAASJ,kBACTZ,EAAW,GAAKA,GAAY,GAC5B,GACAA,EAAW,IAAMA,GAAY,GAC7B,GACAA,EAAW,IAAMA,GAAY,GAC7B,EACA,EACFO,EAAYS,EAAST,UACrBC,EAAaQ,EAASR,WACtBF,EAAcU,EAASV,YACvBsE,EAAc5D,EAAS4D,YACvBC,EACF7E,GAAY,EACRgB,EAASX,UAAY,EACpBL,GAAYO,EAAYK,IAAuB,EAAIS,KAAKyD,IAC3D1E,EACFJ,GAAY,EAAIgB,EAASZ,QAAwC,GAA7ByE,EAAcvE,GAEpD,GAAIN,EAAW,EAIb,IAHA,IAAIwB,EAAUpB,EAAU,EACpBqB,EAAUrB,EAAU,EAEfsB,EAAI,EAAGA,EAAI1B,EAAU0B,IAAK,CACjC,IAAIqD,EAA0B,IAAb/E,EAAiBA,EAAW,EACzCyC,EAAQ,EAAIpB,KAAKyD,GAAKpD,EAAKqD,EAC3BpD,EAAU,IAAMoD,EAAcrD,EAAI,GAClCsD,EAAc3D,KAAK4D,IAAIxC,GAAQoC,EAAcrD,EAC7C0D,EAAc7D,KAAK8D,IAAI1C,GAAQoC,EAAcpD,EAC7CiB,EAAasC,EAAczE,EAAY,EACvCoC,EAAauC,EAAcN,EAAcpE,EAAa,EAE1DL,EAAM2B,KAAK,CACTG,GAAE,QAAAC,OAAUR,GACZe,OACAd,SACAqD,cACAE,cACAxC,aACAC,eAKN1B,EAAY,SAAC2B,GAAD,OAAAzD,OAAA0D,EAAA,EAAA1D,CAAA,GACPyD,EADO,CAEVzC,QACAC,UACAC,UAAyB,EAAdwE,EACXF,YAA0B,IAAb3E,EAAiB,IAAM,SAErC,CAACA,IAGFX,EAAAC,EAAAC,cAAA,MAAAJ,OAAAK,OAAA,CACEsD,MAAM,6BACNC,WAAW,+BACXnD,MAAOoB,EAASZ,QAChB4C,OAAQhC,EAASZ,QACjB6C,QAAO,OAAAf,OAASlB,EAASZ,QAAlB,KAAA8B,OAA6BlB,EAASZ,UACzClB,GAEJG,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UACE0C,GAAG,eACHrC,MAAM,SACNoD,OAAO,SACPE,EAAE,QACFC,EAAE,QACFC,YAAY,qBAEZ/D,EAAAC,EAAAC,cAAA,gBACE8D,GAAG,cACHC,SAAS,SACTC,OAAO,KACPC,OAAO,uBAETnE,EAAAC,EAAAC,cAAA,YAAU8D,GAAG,qBAAqBG,OAAO,uBACzCnE,EAAAC,EAAAC,cAAA,kBACE8D,GAAG,qBACHG,OAAO,mBACPC,aAAa,QAEfpE,EAAAC,EAAAC,cAAA,iBACE8D,GAAG,mBACHK,OAAO,gDAIbrE,EAAAC,EAAAC,cAAA,KACEoE,KAAK,UACLC,OAAO,OACPwB,UAAS,UAAAlD,OAAYlB,EAAS2D,YAArB,KAAAzC,OAAoClB,EAASZ,QAAU,EAAvD,KAAA8B,OACPlB,EAASZ,QAAU,EADZ,MAIRY,EAASb,OACRa,EAASb,MAAMgC,OAAS,GACxBnB,EAASb,MAAM0D,IAAI,SAACG,GAClB,OACE3E,EAAAC,EAAAC,cAAA,QACE0E,IAAKD,EAAK/B,GACVrC,MAAOoB,EAAST,UAChByC,OAAQhC,EAASR,WACjB0C,EAAGc,EAAKtB,WACRS,EAAGa,EAAKrB,WACRwB,QAASnD,EAASL,YAClByE,UAAS,UAAAlD,OAAY8B,EAAKrC,OAAjB,KAAAO,OAA2B8B,EAAKgB,YAAhC,KAAA9C,OAA+C8B,EAAKkB,YAApD,KACTd,GAAIpD,EAASN,eAMvBrB,EAAAC,EAAAC,cAAA,UACE8F,GAAIrE,EAASZ,QAAU,EACvBkF,GAAItE,EAASZ,QAAU,EACvBmF,EAAGvE,EAASX,UAAY,EACxBuD,OAAO,OACPD,KAAK,OACLU,OAAO,uBAEThF,EAAAC,EAAAC,cAAA,UACE8F,GAAIrE,EAASZ,QAAU,EACvBkF,GAAItE,EAASZ,QAAU,EACvBmF,EAAGvE,EAASX,UAAY,EACxBsD,KAAK,eACLC,OAAO,WC/IF4B,EAAc,SAAA3G,GAgBrBA,EAfJoD,GAeI,IAdJwD,EAcI5G,EAdJ4G,KACAC,EAaI7G,EAbJ6G,KACAC,EAYI9G,EAZJ8G,OACA3F,EAWInB,EAXJmB,SAWI4F,GAAA/G,EAVJgH,UAUIhH,EATJiH,UASIjH,EARJkH,yBAQI,IAAAH,EARe,EAQfA,EANJI,GAMInH,EAPJoH,MAOIpH,EANJmH,MACAE,EAKIrH,EALJqH,SAKIC,EAAAtH,EAJJuH,oBAII,IAAAD,KAHJE,EAGIxH,EAHJwH,WACAC,EAEIzH,EAFJyH,UACGpH,EACCC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,uJACJ,OACEQ,EAAAC,EAAAC,cAAA,MAAAJ,OAAAK,OAAA,CACEC,UAAS,qCAAAyC,OAAuCoE,IAC5CpH,GAEJG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBAAyBiG,GAAcC,GACrDS,GACC/G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BACbJ,EAAAC,EAAAC,cAAA,OACEE,UAAU,+BACV8G,MAAO,CAAE3G,MAAK,GAAAsC,OAAKgE,EAAL,SAInBF,GAAQ3G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BuG,KAGvD3G,EAAAC,EAAAC,cAACiH,EAAD,CACE/G,UAAU,qBACV8G,MAAO,CACLE,MAAOJ,EACPjB,UAAS,UAAAlD,OAAY6D,EAAZ,SAEX/F,SAAUA,EACVyF,KAAMA,MAMd,SAASe,EAATE,GAAuC,IAAlBjB,EAAkBiB,EAAlBjB,KAASvG,EAASC,OAAAC,EAAA,EAAAD,CAAAuH,EAAA,UAErC,OADAC,QAAQC,IAAI,QAAS1H,GACR,gBAATuG,EACKpG,EAAAC,EAAAC,cAACsH,EAAmB3H,GACT,qBAATuG,EACFpG,EAAAC,EAAAC,cAACuH,EAAwB5H,GACd,eAATuG,EACFpG,EAAAC,EAAAC,cAACwH,EAAkB7H,GAEnB,gBCxDL8H,EAAM,WAAM,IAAA/G,EACsBC,mBAAS,GAD/BY,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAc,EAAA,GACTgH,EADSnG,EAAA,GACIoG,EADJpG,EAAA,GAAAqG,EAEsBjH,mBAAS,GAF/BkH,EAAAjI,OAAA4B,EAAA,EAAA5B,CAAAgI,EAAA,GAETE,EAFSD,EAAA,GAEIE,EAFJF,EAAA,GAAAG,EAG4BrH,mBAAS,GAHrCsH,EAAArI,OAAA4B,EAAA,EAAA5B,CAAAoI,EAAA,GAGTE,EAHSD,EAAA,GAGOE,EAHPF,EAAA,GAKhB,OACEnI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACoI,EAAD,CACE5I,MAAOsI,EACPrI,SAAUsI,EACVxI,MAAM,yBACNG,KAAK,+BAGPI,EAAAC,EAAAC,cAACoI,EAAD,CACE5I,MAAOkI,EACPjI,SAAUkI,EACVpI,MAAM,2BACNG,KAAK,gCAGTI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACqI,EAAD,CACEnC,KAAK,cACLzF,SAAUqH,EACV1B,OAAQ,GACRO,SAAU,GACVF,KAAM3G,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAapI,UAAU,wBAC7B4G,WAAW,aAGfhH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACqI,EAAD,CACEnC,KAAK,aACLzF,SAAUiH,EACVtB,OAAQ,GACRO,SAAU,GACVF,KAAM3G,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAapI,UAAU,wBAC7B4G,WAAW,cAIjBhH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACoI,EAAD,CACE5I,MAAO0I,EACPzI,SAAU0I,EACV5I,MAAM,4BACNG,KAAK,+BAEPI,EAAAC,EAAAC,cAAA,aAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACqI,EAAD,CACEnC,KAAK,mBACLE,OAAQ,GACRS,cAAc,EACdpG,SAAUyH,EACVnB,UAAU,OACVD,WAAW,aAGfhH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBAMvBqI,iBAAOzI,EAAAC,EAAAC,cAACwI,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.71ebc2a9.chunk.js","sourcesContent":["import React from 'react';\nimport { PlusCircleIcon, PlusIcon } from 'nexticons/solid';\n\nexport const TableSeatsTool = ({ title, count, setSeats, desc, ...props }) => {\n  return (\n    <div className=\"table-seats-tool\" {...props}>\n      {title && <h2 className=\"table-seats-tool__title\">{title}</h2>}\n      <div className=\"table-seats-tool__counter\">\n        <button\n          className=\"table-seats-tool__button\"\n          onClick={() => setSeats(count > 0 ? count - 1 : 0)}\n        >\n          -\n        </button>\n        <div className=\"table-seats-tool__count\">{count}</div>\n        <button\n          className=\"table-seats-tool__button\"\n          onClick={() => setSeats(count < 30 ? count + 1 : 30)}\n        >\n          <PlusIcon width={18} strokeWidth={2} />\n        </button>\n      </div>\n      {desc && (\n        <div className=\"table-seats-tool__info\">\n          <PlusCircleIcon className=\"table-seats-tool__info-icon\" />\n          <p>{desc}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useMemo, useState } from 'react';\n\nexport const SquareTableSvg = ({ numSeats = 0, ...props }) => {\n  const [svgProps, setSvgProps] = useState({\n    seats: [],\n    svgSize: 72,\n    tableSize: 54,\n    tableOffset: 9,\n    seatWidth: 26,\n    seatHeight: 18,\n    seatOffset: 2,\n    seatRound: 7,\n    seatOpacity: 0.76,\n    spaceBetweenSeats: 8, //18\n    angleSpace: 14,\n  });\n\n  useMemo(() => {\n    const borderCount = 4;\n    let seats = [];\n    let tableProp = [];\n    let spaceBetweenSeats =\n      numSeats <= 12\n        ? svgProps.spaceBetweenSeats\n        : numSeats > 12 && numSeats <= 20\n        ? 6\n        : 4;\n    let seatWidth = svgProps.seatWidth;\n    let seatHeight = svgProps.seatHeight;\n    let tableOffset = svgProps.tableOffset;\n    let seatOffset = svgProps.seatOffset;\n    let angleSpace = svgProps.angleSpace;\n    let maxSeatsEachBorder = Math.ceil(numSeats / 4);\n    let tablePerimeter =\n      borderCount * seatWidth * maxSeatsEachBorder +\n      borderCount * (maxSeatsEachBorder - 1) * spaceBetweenSeats +\n      angleSpace * borderCount * 2;\n    let tableWidth = tablePerimeter / borderCount;\n    let tableSize = tableWidth > seatWidth ? tableWidth : svgProps.tableSize;\n    let svgSize = tableSize + tableOffset * 2;\n\n    if (numSeats > 0) {\n      const borderCount = 4;\n\n      let centerX = svgSize / 2;\n      let centerY = svgSize / 2;\n\n      for (let i = 0; i < borderCount; i++) {\n        let rotate = (360 / borderCount) * i + 90;\n\n        let anglePositionX =\n          i % 4 === 0 || i % 4 === 3\n            ? tableOffset\n            : i % 4 === 1 || i % 4 === 2\n            ? tableOffset + tableSize\n            : 0;\n        let anglePositionY =\n          i % 4 === 0 || i % 4 === 1\n            ? tableOffset\n            : i % 4 === 2 || i % 4 === 3\n            ? tableOffset + tableSize\n            : 0;\n\n        tableProp.push({\n          count: 0,\n          rotate,\n          anglePositionX,\n          anglePositionY,\n          seats: [],\n        });\n      }\n\n      for (let i = 0; i < numSeats; i++) {\n        let groupIndex = i % 4;\n\n        if (numSeats === 2 && i === 1) {\n          let rectGroupIndex = groupIndex % 2 === 0 ? 0 : 2;\n\n          tableProp[rectGroupIndex].count += 1;\n          tableProp[rectGroupIndex].seats.push({\n            id: `seat_${i}`,\n            anglePositionX: tableProp[rectGroupIndex].anglePositionX,\n            anglePositionY: tableProp[rectGroupIndex].anglePositionY,\n          });\n        } else if (i < 4) {\n          tableProp[groupIndex].count += 1;\n          tableProp[groupIndex].seats.push({\n            id: `seat_${i}`,\n            anglePositionX: tableProp[groupIndex].anglePositionX,\n            anglePositionY: tableProp[groupIndex].anglePositionY,\n          });\n        } else {\n          let rectGroupIndex = groupIndex === 3 ? 0 : groupIndex + 1;\n\n          tableProp[rectGroupIndex].count += 1;\n          tableProp[rectGroupIndex].seats.push({\n            id: `seat_${i}`,\n            anglePositionX: tableProp[rectGroupIndex].anglePositionX,\n            anglePositionY: tableProp[rectGroupIndex].anglePositionY,\n          });\n        }\n      }\n\n      for (let i = 0; i < tableProp.length; i++) {\n        let groupIndex = i % 4;\n\n        let seatsLength = tableProp[i].seats.length;\n\n        if (seatsLength > 0) {\n          let seatsTotalHalfWidth =\n            (seatWidth * seatsLength +\n              spaceBetweenSeats * (seatsLength - 1 > 0 ? seatsLength - 1 : 0)) /\n            2;\n          let startPoint = 0;\n          let direction = 1;\n\n          if (groupIndex === 0) {\n            startPoint = centerY + seatsTotalHalfWidth - seatWidth;\n            direction = -1;\n          } else if (groupIndex === 1) {\n            startPoint = centerX - seatsTotalHalfWidth;\n            direction = 1;\n          } else if (groupIndex === 2) {\n            startPoint = centerY - seatsTotalHalfWidth;\n            direction = 1;\n          } else if (groupIndex === 3) {\n            startPoint = centerX + seatsTotalHalfWidth - seatWidth;\n            direction = -1;\n          }\n\n          for (let j = 0; j < seatsLength; j++) {\n            let step =\n              startPoint + direction * (spaceBetweenSeats * j + seatWidth * j);\n\n            if (groupIndex === 1 || groupIndex === 3) {\n              tableProp[i].seats[j].seatStartX = step;\n              tableProp[i].seats[j].seatStartY =\n                tableProp[i].seats[j].anglePositionY -\n                seatHeight / 2 +\n                direction * seatOffset;\n            } else {\n              tableProp[i].seats[j].seatStartY = step;\n              tableProp[i].seats[j].seatStartX =\n                tableProp[i].seats[j].anglePositionX -\n                seatHeight / 2 -\n                direction * seatOffset;\n            }\n          }\n        }\n\n        seats.push(tableProp[i].seats);\n      }\n    }\n\n    setSvgProps((prevState) => ({\n      ...prevState,\n      seats,\n      svgSize,\n      tableSize,\n      spaceBetweenSeats,\n    }));\n  }, [numSeats]);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width={svgProps.svgSize}\n      height={svgProps.svgSize}\n      viewBox={`0 0 ${svgProps.svgSize} ${svgProps.svgSize}`}\n      {...props}\n    >\n      <defs>\n        <filter\n          id=\"square-shadow\"\n          width=\"118.6%\"\n          height=\"118.6%\"\n          x=\"-9.3%\"\n          y=\"-9.3%\"\n          filterUnits=\"objectBoundingBox\"\n        >\n          <feMorphology\n            in=\"SourceAlpha\"\n            operator=\"dilate\"\n            radius=\".5\"\n            result=\"shadowSpreadOuter1\"\n          />\n          <feOffset in=\"shadowSpreadOuter1\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur\n            in=\"shadowOffsetOuter1\"\n            result=\"shadowBlurOuter1\"\n            stdDeviation=\"2.5\"\n          />\n          <feColorMatrix\n            in=\"shadowBlurOuter1\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n          />\n        </filter>\n      </defs>\n\n      <g fill=\"#D8D8D8\" stroke=\"none\">\n        {svgProps.seats &&\n          svgProps.seats.length > 0 &&\n          svgProps.seats.map((border, index) => {\n            return (\n              border &&\n              border.length > 0 &&\n              border.map((seat) => {\n                return (\n                  <rect\n                    key={seat.id}\n                    data-key={seat.id}\n                    width={\n                      index % 2 === 1 ? svgProps.seatWidth : svgProps.seatHeight\n                    }\n                    height={\n                      index % 2 === 1 ? svgProps.seatHeight : svgProps.seatWidth\n                    }\n                    x={seat.seatStartX}\n                    y={seat.seatStartY}\n                    opacity={svgProps.seatOpacity}\n                    rx={svgProps.seatRound}\n                  />\n                );\n              })\n            );\n          })}\n      </g>\n      <rect\n        width={svgProps.tableSize}\n        height={svgProps.tableSize}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        stroke=\"none\"\n        fill=\"#000\"\n        filter=\"url(#square-shadow)\"\n      />\n      <rect\n        width={svgProps.tableSize}\n        height={svgProps.tableSize}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        fill=\"currentColor\"\n        stroke=\"none\"\n      />\n    </svg>\n  );\n};\n","import React, { useMemo, useState } from 'react';\n\nexport const RectangularTableSvg = ({ numSeats = 0, ...props }) => {\n  const [svgProps, setSvgProps] = useState({\n    seats: [],\n    svgSize: {\n      width: 72,\n      height: 72,\n    },\n    tableSize: {\n      width: 54,\n      height: 54,\n    },\n    tableOffset: 9,\n    seatWidth: 26,\n    seatHeight: 18,\n    seatOffset: 2,\n    seatRound: 7,\n    seatOpacity: 0.76,\n    spaceBetweenSeats: 18, //18\n    angleSpace: 14,\n  });\n\n  useMemo(() => {\n    let seats = [];\n    let tableProp = [];\n    let tableWidth = 54;\n    let tableHeight = 54;\n    let svgWidth = 72;\n    let svgHeight = 72;\n    let spaceBetweenSeats =\n      numSeats <= 8\n        ? svgProps.spaceBetweenSeats\n        : numSeats > 8 && numSeats <= 12\n        ? 14\n        : numSeats > 12 && numSeats <= 16\n        ? 10\n        : numSeats > 16 && numSeats <= 20\n        ? 8\n        : 4;\n    let seatWidth = svgProps.seatWidth;\n    let seatHeight = svgProps.seatHeight;\n    let tableOffset = svgProps.tableOffset;\n    let seatOffset = svgProps.seatOffset;\n    let angleSpace = svgProps.angleSpace;\n    let maxSeatsEachBorder = Math.ceil((numSeats - 2) / 2);\n\n    if (numSeats > 0) {\n      const borderCount = 4;\n      let tablePerimeter =\n        2 * tableHeight +\n        2 *\n          (seatWidth * maxSeatsEachBorder +\n            spaceBetweenSeats * (maxSeatsEachBorder - 1) +\n            angleSpace * 2);\n      tableWidth = (tablePerimeter - 2 * tableHeight) / 2;\n      tableWidth = tableWidth > seatWidth ? tableWidth : 54;\n      svgWidth = tableWidth + tableOffset * 2;\n\n      let centerX = svgWidth / 2;\n      let centerY = svgHeight / 2;\n\n      for (let i = 0; i < borderCount; i++) {\n        let rotate = (360 / borderCount) * i + 90;\n\n        let anglePositionX =\n          i % 4 === 0 || i % 4 === 3\n            ? tableOffset\n            : i % 4 === 1 || i % 4 === 2\n            ? tableOffset + tableWidth\n            : 0;\n        let anglePositionY =\n          i % 4 === 0 || i % 4 === 1\n            ? tableOffset\n            : i % 4 === 2 || i % 4 === 3\n            ? tableOffset + tableHeight\n            : 0;\n\n        tableProp.push({\n          count: 0,\n          rotate,\n          anglePositionX,\n          anglePositionY,\n          seats: [],\n        });\n      }\n\n      for (let i = 0; i < numSeats; i++) {\n        let groupIndex = i % 4;\n\n        if (numSeats === 2 && i === 1) {\n          let rectGroupIndex = groupIndex % 2 === 0 ? 0 : 2;\n\n          tableProp[rectGroupIndex].count += 1;\n          tableProp[rectGroupIndex].seats.push({\n            id: `seat_${i}`,\n            anglePositionX: tableProp[rectGroupIndex].anglePositionX,\n            anglePositionY: tableProp[rectGroupIndex].anglePositionY,\n          });\n        } else if (i < 4) {\n          tableProp[groupIndex].count += 1;\n          tableProp[groupIndex].seats.push({\n            id: `seat_${i}`,\n            anglePositionX: tableProp[groupIndex].anglePositionX,\n            anglePositionY: tableProp[groupIndex].anglePositionY,\n          });\n        } else {\n          let rectGroupIndex = groupIndex % 2 === 0 ? 1 : 3;\n\n          tableProp[rectGroupIndex].count += 1;\n          tableProp[rectGroupIndex].seats.push({\n            id: `seat_${i}`,\n            anglePositionX: tableProp[rectGroupIndex].anglePositionX,\n            anglePositionY: tableProp[rectGroupIndex].anglePositionY,\n          });\n        }\n      }\n\n      for (let i = 0; i < tableProp.length; i++) {\n        let groupIndex = i % 4;\n\n        let seatsLength = tableProp[i].seats.length;\n\n        if (seatsLength > 0) {\n          let seatsTotalHalfWidth =\n            (seatWidth * seatsLength +\n              spaceBetweenSeats * (seatsLength - 1 > 0 ? seatsLength - 1 : 0)) /\n            2;\n          let startPoint = 0;\n          let direction = 1;\n\n          if (groupIndex === 0) {\n            startPoint = centerY + seatsTotalHalfWidth - seatWidth;\n            direction = -1;\n          } else if (groupIndex === 1) {\n            startPoint = centerX - seatsTotalHalfWidth;\n            direction = 1;\n          } else if (groupIndex === 2) {\n            startPoint = centerY - seatsTotalHalfWidth;\n            direction = 1;\n          } else if (groupIndex === 3) {\n            if (maxSeatsEachBorder > seatsLength) {\n              seatsTotalHalfWidth =\n                (seatWidth * maxSeatsEachBorder +\n                  spaceBetweenSeats *\n                    (maxSeatsEachBorder - 1 > 0 ? maxSeatsEachBorder - 1 : 0)) /\n                2;\n            }\n\n            startPoint = centerX - seatsTotalHalfWidth;\n            direction = 1;\n          }\n\n          for (let j = 0; j < seatsLength; j++) {\n            let step =\n              startPoint + direction * (spaceBetweenSeats * j + seatWidth * j);\n\n            if (groupIndex === 1 || groupIndex === 3) {\n              let offsetDirection = groupIndex === 3 ? -1 : 1;\n              tableProp[i].seats[j].seatStartX = step;\n              tableProp[i].seats[j].seatStartY =\n                tableProp[i].seats[j].anglePositionY -\n                seatHeight / 2 +\n                offsetDirection * seatOffset;\n            } else {\n              tableProp[i].seats[j].seatStartY = step;\n              tableProp[i].seats[j].seatStartX =\n                tableProp[i].seats[j].anglePositionX -\n                seatHeight / 2 -\n                direction * seatOffset;\n            }\n          }\n        }\n\n        seats.push(tableProp[i].seats);\n      }\n    }\n\n    setSvgProps((prevState) => ({\n      ...prevState,\n      seats,\n      svgSize: {\n        ...prevState.svgSize,\n        width: svgWidth,\n      },\n      tableSize: {\n        ...prevState.tableSize,\n        width: tableWidth,\n      },\n    }));\n  }, [numSeats]);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width={svgProps.svgSize.width}\n      height={svgProps.svgSize.height}\n      viewBox={`0 0 ${svgProps.svgSize.width} ${svgProps.svgSize.height}`}\n      {...props}\n    >\n      <defs>\n        <filter\n          id=\"rectangular-shadow\"\n          width=\"118.6%\"\n          height=\"134%\"\n          x=\"-9.3%\"\n          y=\"-17%\"\n          filterUnits=\"objectBoundingBox\"\n        >\n          <feMorphology\n            in=\"SourceAlpha\"\n            operator=\"dilate\"\n            radius=\".5\"\n            result=\"shadowSpreadOuter1\"\n          />\n          <feOffset in=\"shadowSpreadOuter1\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur\n            in=\"shadowOffsetOuter1\"\n            result=\"shadowBlurOuter1\"\n            stdDeviation=\"2.5\"\n          />\n          <feColorMatrix\n            in=\"shadowBlurOuter1\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n          />\n        </filter>\n      </defs>\n\n      <g fill=\"#D8D8D8\" stroke=\"none\">\n        {svgProps.seats &&\n          svgProps.seats.length > 0 &&\n          svgProps.seats.map((border, index) => {\n            return (\n              border &&\n              border.length > 0 &&\n              border.map((seat) => {\n                return (\n                  <rect\n                    key={seat.id}\n                    data-key={seat.id}\n                    width={\n                      index === 0 || index === 2\n                        ? svgProps.seatHeight\n                        : svgProps.seatWidth\n                    }\n                    height={\n                      index === 0 || index === 2\n                        ? svgProps.seatWidth\n                        : svgProps.seatHeight\n                    }\n                    x={seat.seatStartX}\n                    y={seat.seatStartY}\n                    opacity={svgProps.seatOpacity}\n                    rx={svgProps.seatRound}\n                  />\n                );\n              })\n            );\n          })}\n      </g>\n      <rect\n        width={svgProps.tableSize.width}\n        height={svgProps.tableSize.height}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        stroke=\"none\"\n        fill=\"#000\"\n        filter=\"url(#rectangular-shadow)\"\n      />\n      <rect\n        width={svgProps.tableSize.width}\n        height={svgProps.tableSize.height}\n        x=\"9\"\n        y=\"9\"\n        rx=\"12\"\n        fill=\"currentColor\"\n        stroke=\"none\"\n      />\n    </svg>\n  );\n};\n","import React, { useMemo, useState } from 'react';\n\nexport const RoundTableSvg = ({ numSeats = 0, ...props }) => {\n  const [svgProps, setSvgProps] = useState({\n    seats: [],\n    svgSize: 66,\n    tableSize: 54,\n    tableRotate: 180,\n    tableOffset: 6,\n    seatWidth: 26,\n    seatHeight: 18,\n    seatOffsetY: 2,\n    seatRound: 7,\n    seatOpacity: 0.76,\n    spaceBetweenSeats: 18,\n  });\n\n  useMemo(() => {\n    let seats = [];\n    let spaceBetweenSeats =\n      numSeats <= 8\n        ? svgProps.spaceBetweenSeats\n        : numSeats > 8 && numSeats <= 12\n        ? 14\n        : numSeats > 12 && numSeats <= 16\n        ? 10\n        : numSeats > 16 && numSeats <= 20\n        ? 8\n        : 4;\n    let seatWidth = svgProps.seatWidth;\n    let seatHeight = svgProps.seatHeight;\n    let tableOffset = svgProps.tableOffset;\n    let seatOffsetY = svgProps.seatOffsetY;\n    let tableRadius =\n      numSeats <= 4\n        ? svgProps.tableSize / 2\n        : (numSeats * (seatWidth + spaceBetweenSeats)) / (2 * Math.PI);\n    let svgSize =\n      numSeats <= 4 ? svgProps.svgSize : (tableRadius + tableOffset) * 2;\n\n    if (numSeats > 0) {\n      let centerX = svgSize / 2;\n      let centerY = svgSize / 2;\n\n      for (let i = 0; i < numSeats; i++) {\n        let seatsCount = numSeats !== 3 ? numSeats : 4;\n        let step = (2 * Math.PI * i) / seatsCount;\n        let rotate = (360 / seatsCount) * i + 90;\n        let seatCenterX = Math.cos(step) * tableRadius + centerX;\n        let seatCenterY = Math.sin(step) * tableRadius + centerY;\n        let seatStartX = seatCenterX - seatWidth / 2;\n        let seatStartY = seatCenterY + seatOffsetY - seatHeight / 2;\n\n        seats.push({\n          id: `seat_${i}`,\n          step,\n          rotate,\n          seatCenterX,\n          seatCenterY,\n          seatStartX,\n          seatStartY,\n        });\n      }\n    }\n\n    setSvgProps((prevState) => ({\n      ...prevState,\n      seats,\n      svgSize,\n      tableSize: tableRadius * 2,\n      tableRotate: numSeats === 5 ? 270 : 180,\n    }));\n  }, [numSeats]);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width={svgProps.svgSize}\n      height={svgProps.svgSize}\n      viewBox={`0 0 ${svgProps.svgSize} ${svgProps.svgSize}`}\n      {...props}\n    >\n      <defs>\n        <filter\n          id=\"round-shadow\"\n          width=\"116.7%\"\n          height=\"116.7%\"\n          x=\"-8.3%\"\n          y=\"-8.3%\"\n          filterUnits=\"objectBoundingBox\"\n        >\n          <feMorphology\n            in=\"SourceAlpha\"\n            operator=\"dilate\"\n            radius=\".5\"\n            result=\"shadowSpreadOuter1\"\n          />\n          <feOffset in=\"shadowSpreadOuter1\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur\n            in=\"shadowOffsetOuter1\"\n            result=\"shadowBlurOuter1\"\n            stdDeviation=\"2.5\"\n          />\n          <feColorMatrix\n            in=\"shadowBlurOuter1\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n          />\n        </filter>\n      </defs>\n      <g\n        fill=\"#D8D8D8\"\n        stroke=\"none\"\n        transform={`rotate(${svgProps.tableRotate} ${svgProps.svgSize / 2} ${\n          svgProps.svgSize / 2\n        })`}\n      >\n        {svgProps.seats &&\n          svgProps.seats.length > 0 &&\n          svgProps.seats.map((seat) => {\n            return (\n              <rect\n                key={seat.id}\n                width={svgProps.seatWidth}\n                height={svgProps.seatHeight}\n                x={seat.seatStartX}\n                y={seat.seatStartY}\n                opacity={svgProps.seatOpacity}\n                transform={`rotate(${seat.rotate} ${seat.seatCenterX} ${seat.seatCenterY})`}\n                rx={svgProps.seatRound}\n              />\n            );\n          })}\n      </g>\n\n      <circle\n        cx={svgProps.svgSize / 2}\n        cy={svgProps.svgSize / 2}\n        r={svgProps.tableSize / 2}\n        stroke=\"none\"\n        fill=\"#000\"\n        filter=\"url(#round-shadow)\"\n      />\n      <circle\n        cx={svgProps.svgSize / 2}\n        cy={svgProps.svgSize / 2}\n        r={svgProps.tableSize / 2}\n        fill=\"currentColor\"\n        stroke=\"none\"\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport { SquareTableSvg } from './SquareTableSvg';\nimport { RectangularTableSvg } from './RectangularTableSvg';\nimport { RoundTableSvg } from './RoundTableSvg';\n\nexport const DineInTable = ({\n  id,\n  type,\n  name,\n  number,\n  numSeats,\n  positionX,\n  positionY,\n  orientationAngle = 0,\n  scale,\n  icon,\n  progress,\n  showProgress = true,\n  tableColor,\n  textTheme, // dark, light\n  ...props\n}) => {\n  return (\n    <div\n      className={`dine-in-table dine-in-table--text-${textTheme}`}\n      {...props}\n    >\n      <div className=\"dine-in-table__box\">\n        <div className=\"dine-in-table__inner\">\n          <div className=\"dine-in-table__number\">{name ? name : number}</div>\n          {showProgress && (\n            <div className=\"dine-in-table__progress-bar\">\n              <div\n                className=\"dine-in-table__progress-line\"\n                style={{ width: `${progress}%` }}\n              />\n            </div>\n          )}\n          {icon && <div className=\"dine-in-table__icon-box\">{icon}</div>}\n        </div>\n      </div>\n      <RenderSvg\n        className=\"dine-in-table__svg\"\n        style={{\n          color: tableColor,\n          transform: `rotate(${orientationAngle}deg)`,\n        }}\n        numSeats={numSeats}\n        type={type}\n      />\n    </div>\n  );\n};\n\nfunction RenderSvg({ type, ...props }) {\n  console.log('props', props);\n  if (type === 'SquareTable') {\n    return <SquareTableSvg {...props} />;\n  } else if (type === 'RectangularTable') {\n    return <RectangularTableSvg {...props} />;\n  } else if (type === 'RoundTable') {\n    return <RoundTableSvg {...props} />;\n  } else {\n    return null;\n  }\n}\n","import React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport './styles.css';\nimport { TableSeatsTool } from './components/TableSeatsTool';\nimport { DineInTable } from './components/DineInTable';\nimport { DessertIcon } from 'nexticons/outline';\n\nconst App = () => {\n  const [circleSeats, setCircleSeats] = useState(8);\n  const [squareSeats, setSquareSeats] = useState(4);\n  const [rectangleSeats, setRectangleSeats] = useState(5);\n\n  return (\n    <div className=\"app-wrap\">\n      <div className=\"table-tool-header\">\n        <TableSeatsTool\n          count={squareSeats}\n          setSeats={setSquareSeats}\n          title=\"Seats for Square Table\"\n          desc=\"Select the number of seats\"\n        />\n\n        <TableSeatsTool\n          count={circleSeats}\n          setSeats={setCircleSeats}\n          title=\"Seats for Circular Table\"\n          desc=\"Select the number of seats\"\n        />\n      </div>\n      <div className=\"table-area\">\n        <div className=\"table-area__inner\">\n          <DineInTable\n            type=\"SquareTable\"\n            numSeats={squareSeats}\n            number={12}\n            progress={55}\n            icon={<DessertIcon className=\"dine-in-table__icon\" />}\n            tableColor=\"#0a56f1\"\n          />\n        </div>\n        <div className=\"table-area__inner\">\n          <DineInTable\n            type=\"RoundTable\"\n            numSeats={circleSeats}\n            number={13}\n            progress={50}\n            icon={<DessertIcon className=\"dine-in-table__icon\" />}\n            tableColor=\"#b620e0\"\n          />\n        </div>\n      </div>\n      <div className=\"table-tool-header\">\n        <TableSeatsTool\n          count={rectangleSeats}\n          setSeats={setRectangleSeats}\n          title=\"Seats for Rectangle Table\"\n          desc=\"Select the number of seats\"\n        />\n        <div />\n      </div>\n      <div className=\"table-area\">\n        <div className=\"table-area__inner\">\n          <DineInTable\n            type=\"RectangularTable\"\n            number={14}\n            showProgress={false}\n            numSeats={rectangleSeats}\n            textTheme=\"dark\"\n            tableColor=\"#ffffff\"\n          />\n        </div>\n        <div className=\"table-area__inner\" />\n      </div>\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}